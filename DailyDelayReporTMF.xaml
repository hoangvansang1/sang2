<Activity mc:Ignorable="sap sap2010" x:Class="DAILY_DELAY_REPORT_MF" this:DAILY_DELAY_REPORT_MF.dicDIC="[New Dictionary(Of String, Object)]" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:maes="clr-namespace:Microsoft.Activities.Extensions.Statements;assembly=Microsoft.Activities.Extensions" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="dtDIC" Type="InArgument(sd:DataTable)" />
    <x:Property Name="dicDIC" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1045,834</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>DAILY_DELAY_REPORT_MF_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="26">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Globalization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="22">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">False</x:Boolean>
      <x:Boolean x:Key="ShouldCollapseAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Flowchart DisplayName="DAILY_DELAY_REPORT_MF" sap:VirtualizedContainerService.HintSize="1025,774" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dtbHistory" />
      <Variable x:TypeArguments="x:Int32" Name="int32TotalRows" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="wbHistory" />
      <Variable x:TypeArguments="x:String" Name="DayCurrent" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtbDay" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtbDaywork" />
      <Variable x:TypeArguments="x:String" Name="strDaywork" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtbWings" />
      <Variable x:TypeArguments="x:String" Name="strCheckDay" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="wbInputWing" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtbDaiLy" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="wbDaiLyD" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtbWorkT4" />
      <Variable x:TypeArguments="x:String" Name="strDayT4" />
      <Variable x:TypeArguments="x:String" Name="strYear" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtbLoadProduct" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="wbLoadProduct" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtbLoadProduct2" />
      <Variable x:TypeArguments="x:Int32" Name="In32VmarRow" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="wbMFDeLay" />
      <Variable x:TypeArguments="x:String" Name="ConvertDayWork" />
      <Variable x:TypeArguments="ui:GenericValue" Name="strPROD" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtbDaywork2" />
      <Variable x:TypeArguments="x:String" Name="strDaywork2" />
      <Variable x:TypeArguments="x:String" Name="strPCS4" />
      <Variable x:TypeArguments="x:String" Name="strDaySearch" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtbStartDay" />
      <Variable x:TypeArguments="x:String" Name="strDayStart" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtbSumAll" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtbEndDay" />
      <Variable x:TypeArguments="x:String" Name="strDayEnd" />
      <Variable x:TypeArguments="x:String" Name="strSumMonth" />
      <Variable x:TypeArguments="ui:GenericValue" Name="strMFC" />
      <Variable x:TypeArguments="ui:GenericValue" Name="strMFO" />
      <Variable x:TypeArguments="ui:GenericValue" Name="strMFM" />
      <Variable x:TypeArguments="x:Object" Name="TotalPROD" />
      <Variable x:TypeArguments="x:Object" Name="TotalDelaypcs" />
      <Variable x:TypeArguments="x:Object" Name="TotalDalayPR" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtbLoadSheet1" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtbData" />
      <Variable x:TypeArguments="x:Int32" Name="in32VmaxData" />
      <Variable x:TypeArguments="sd:DataTable" Name="test" />
      <Variable x:TypeArguments="x:String" Name="stBodyMail" />
      <Variable x:TypeArguments="x:String" Name="stBodyNotificationMail" />
      <Variable x:TypeArguments="x:String" Name="stMachineName" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="wbMFNote" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtbMFNote" />
      <Variable x:TypeArguments="x:String" Name="StartTime" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtbDelayWork2" />
      <Variable x:TypeArguments="x:Int32" Name="In32day2" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtbDelayWork" />
      <Variable x:TypeArguments="x:Int32" Name="In32day1" />
      <Variable x:TypeArguments="x:Int32" Name="in32PS4" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">340,12.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">400,50 470,50 470,114.5</av:PointCollection>
        <x:Double x:Key="Width">991</x:Double>
        <x:Double x:Key="Height">738</x:Double>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID4</x:Reference>
    </Flowchart.StartNode>
    <FlowStep>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">0,257</av:Point>
          <av:Size x:Key="ShapeSize">200,66</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Sq\\Write History" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Parallel sap:VirtualizedContainerService.HintSize="574,97" sap2010:WorkflowViewState.IdRef="Parallel_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="CommentOut_1">
            <ui:CommentOut.Body>
              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,198" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" ContinueOnError="True" DisplayName="Click 'Button'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition Position="Center">
                      <ui:CursorPosition.OffsetX>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetX>
                      <ui:CursorPosition.OffsetY>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetY>
                    </ui:CursorPosition>
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="d50861a69639a9b5a0e1415987fbe51e" Selector="&lt;wnd app='excel.exe' cls='#32770' title='Microsoft Excel' /&gt;&lt;wnd ctrlid='2' title='Cancel' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:Click>
              </Sequence>
            </ui:CommentOut.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:CommentOut>
          <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Excel application scope" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" Workbook="[wbHistory]" WorkbookPath="[dicDIC(&quot;LocalFolderHistorySchedule&quot;).ToString]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence sap:VirtualizedContainerService.HintSize="376,567" sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelReadRange AddHeaders="True" DataTable="[dtbHistory]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="Log">
                    <ui:ExcelReadRange.Range>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </ui:ExcelReadRange.Range>
                  </ui:ExcelReadRange>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[int32TotalRows]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[dtbHistory.Rows.Count+2]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:ExcelWriteCell Cell="[&quot;A&quot;+int32TotalRows.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="Log" Text="DAILY DELAY REPORT MF NHON TRACH" />
                  <ui:ExcelSetRangeColor Color="[system.Drawing.Color.Cyan]" DisplayName="Set Range Color" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_1" Range="[&quot;A&quot;+int32TotalRows.ToString+&quot;:&quot;+&quot;G&quot;+int32TotalRows.ToString]" SheetName="Log" />
                  <ui:ExcelWriteCell Cell="[&quot;B&quot;+int32TotalRows.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="Log" Text="[System.DateTime.Now.ToString(“MM/dd/yy HH:mm:ss”)]" />
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ExcelApplicationScope>
        </Parallel>
        <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="574,51" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_1" Workbook="[wbHistory]">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ExcelCloseWorkbook>
      </Sequence>
    </FlowStep>
    <FlowStep x:Name="__ReferenceID0">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">300,367</av:Point>
          <av:Size x:Key="ShapeSize">200,66</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">400,433 400,483</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Check day" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_27">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="702,66" sap2010:WorkflowViewState.IdRef="Sequence_55">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:CreateDirectory ContinueOnError="True" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="334,84" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="D:\Robotics\DaiLyDelayReportMF\Input" />
        </Sequence>
        <Sequence DisplayName="Day Currenday" sap:VirtualizedContainerService.HintSize="702,66" sap2010:WorkflowViewState.IdRef="Sequence_26">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_10">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[strYear]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[now.ToString("yyyy")]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_6">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[DayCurrent]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Now.ToString("yyyyMMdd")]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
        <Sequence DisplayName="Day Work" sap:VirtualizedContainerService.HintSize="702,1606" sap2010:WorkflowViewState.IdRef="Sequence_29">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtbDay]" DisplayName="Execute query" sap:VirtualizedContainerService.HintSize="660,51" sap2010:WorkflowViewState.IdRef="ExecuteQuery_5" ProviderName="System.Data.Odbc" Sql="SELECT DAY FROM RPALIB.ROBOT_CALENDAR_NT WHERE LOCATION ='NT'" ConnectionString="Dsn=WAVEDLIB;system=10.246.194.1;uid=ROBOT;dbq=QGPL WAVEDLIB;dftpkglib=QGPL;languageid=ENU;pkg=QGPL/DEFAULT(IBM),2,0,1,0,512;qrystglmt=-1;pwd=robotics">
            <ui:ExecuteQuery.Parameters>
              <scg:Dictionary x:TypeArguments="x:String, Argument" />
            </ui:ExecuteQuery.Parameters>
          </ui:ExecuteQuery>
          <Sequence DisplayName="For Each Row " sap:VirtualizedContainerService.HintSize="660,1423" sap2010:WorkflowViewState.IdRef="Sequence_36">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtbDay]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="618,1331" sap2010:WorkflowViewState.IdRef="ForEachRow_5">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="568,1183" sap2010:WorkflowViewState.IdRef="Sequence_28">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strCheckDay]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Sequence DisplayName="CheckDayRun" sap:VirtualizedContainerService.HintSize="526,991" sap2010:WorkflowViewState.IdRef="Sequence_30">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[DayCurrent = Trim(strCheckDay)]" sap:VirtualizedContainerService.HintSize="484,899" sap2010:WorkflowViewState.IdRef="If_3">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="284,751" sap2010:WorkflowViewState.IdRef="Sequence_158">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence DisplayName="DaiLy" sap:VirtualizedContainerService.HintSize="242,476" sap2010:WorkflowViewState.IdRef="Sequence_31">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Sequence DisplayName="Take Day Recent" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Sequence DisplayName="Day Work" sap:VirtualizedContainerService.HintSize="396,520" sap2010:WorkflowViewState.IdRef="Sequence_72">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtbDaywork]" DisplayName="Execute query" sap:VirtualizedContainerService.HintSize="354,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_6" ProviderName="System.Data.Odbc" Sql="[&quot;SELECT DAY FROM  RPALIB.ROBOT_CALENDAR_NT where day &lt; &quot;+DayCurrent + &quot; and  day &gt; '20200710'  and ucase(LOcation) ='NT'  order by day DESC LIMIT 1&quot;]" ConnectionString="Dsn=WAVEDLIB;system=10.246.194.1;uid=ROBOT;dbq=QGPL;dftpkglib=QGPL;languageid=ENU;pkg=QGPL/DEFAULT(IBM),2,0,1,0,512;qrystglmt=-1;conntype=2;pwd=robotics">
                                    <ui:ExecuteQuery.Parameters>
                                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                    </ui:ExecuteQuery.Parameters>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ExecuteQuery>
                                  <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtbDaywork]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="354,300" sap2010:WorkflowViewState.IdRef="ForEachRow_6">
                                    <ui:ForEachRow.Body>
                                      <ActivityAction x:TypeArguments="sd:DataRow">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[strDaywork]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:ForEachRow.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ForEachRow>
                                </Sequence>
                                <Sequence DisplayName="Day Work 2" sap:VirtualizedContainerService.HintSize="396,520" sap2010:WorkflowViewState.IdRef="Sequence_73">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtbDaywork2]" DisplayName="Execute query" sap:VirtualizedContainerService.HintSize="354,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_10" ProviderName="System.Data.Odbc" Sql="[&quot;SELECT DAY FROM  RPALIB.ROBOT_CALENDAR_NT where day &lt; &quot;+strDaywork+ &quot; and  day &gt; '20200710'  and ucase(LOcation) ='NT'  order by day DESC LIMIT 1&quot;]" ConnectionString="Dsn=WAVEDLIB;system=10.246.194.1;uid=ROBOT;dbq=QGPL WAVEDLIB;dftpkglib=QGPL;languageid=ENU;pkg=QGPL/DEFAULT(IBM),2,0,1,0,512;qrystglmt=-1">
                                    <ui:ExecuteQuery.Parameters>
                                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                    </ui:ExecuteQuery.Parameters>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ExecuteQuery>
                                  <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtbDaywork2]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="354,300" sap2010:WorkflowViewState.IdRef="ForEachRow_9">
                                    <ui:ForEachRow.Body>
                                      <ActivityAction x:TypeArguments="sd:DataRow">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_69">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[strDaywork2]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:ForEachRow.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ForEachRow>
                                </Sequence>
                                <Sequence DisplayName="Day Start Month" sap:VirtualizedContainerService.HintSize="396,620" sap2010:WorkflowViewState.IdRef="Sequence_74">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="354,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strDaySearch]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[Left(strDaywork,6)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtbStartDay]" DisplayName="Execute query" sap:VirtualizedContainerService.HintSize="354,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_12" ProviderName="System.Data.Odbc" Sql="[&quot;SELECT DAY FROM RPALIB.ROBOT_CALENDAR_NT where day   LIKE '%&quot;+strDaySearch+&quot;%'  and ucase(location) ='NT' order by day asc limit 1&quot;]" ConnectionString="Dsn=WAVEDLIB;system=10.246.194.1;uid=ROBOT;dbq=QGPL WAVEDLIB;dftpkglib=QGPL;languageid=ENU;pkg=QGPL/DEFAULT(IBM),2,0,1,0,512;qrystglmt=-1;pwd=ROBOTICS">
                                    <ui:ExecuteQuery.Parameters>
                                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                    </ui:ExecuteQuery.Parameters>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ExecuteQuery>
                                  <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtbStartDay]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="354,300" sap2010:WorkflowViewState.IdRef="ForEachRow_11">
                                    <ui:ForEachRow.Body>
                                      <ActivityAction x:TypeArguments="sd:DataRow">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_76">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[strDayStart]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:ForEachRow.Body>
                                  </ui:ForEachRow>
                                </Sequence>
                                <Sequence DisplayName="Day End Month" sap:VirtualizedContainerService.HintSize="396,520" sap2010:WorkflowViewState.IdRef="Sequence_80">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtbEndDay]" DisplayName="Execute query" sap:VirtualizedContainerService.HintSize="354,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_14" ProviderName="System.Data.Odbc" Sql="[&quot;SELECT DAY FROM RPALIB.ROBOT_CALENDAR_NT where day   LIKE '%&quot;+strDaySearch+&quot;%'  and ucase(location) ='NT' order by day desc limit 1&quot;]" ConnectionString="Dsn=WAVEDLIB;system=10.246.194.1;uid=ROBOT;dbq=QGPL WAVEDLIB;dftpkglib=QGPL;languageid=ENU;pkg=QGPL/DEFAULT(IBM),2,0,1,0,512;qrystglmt=-1;pwd=ROBOTICS">
                                    <ui:ExecuteQuery.Parameters>
                                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                    </ui:ExecuteQuery.Parameters>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ExecuteQuery>
                                  <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtbEndDay]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="354,300" sap2010:WorkflowViewState.IdRef="ForEachRow_13">
                                    <ui:ForEachRow.Body>
                                      <ActivityAction x:TypeArguments="sd:DataRow">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_79">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[strDayEnd]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:ForEachRow.Body>
                                  </ui:ForEachRow>
                                </Sequence>
                              </Sequence>
                              <Sequence DisplayName="Copy Template" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:CopyFile ContinueOnError="{x:Null}" Destination="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;DailyD&quot;+DayCurrent+&quot;.xlsx&quot;]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="384,157" sap2010:WorkflowViewState.IdRef="CopyFile_3" Overwrite="True" Path="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Daily.xlsx&quot;]" />
                                <ui:CopyFile ContinueOnError="{x:Null}" Destination="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;DailyD&quot;+DayCurrent+&quot;.xls&quot;]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="384,157" sap2010:WorkflowViewState.IdRef="CopyFile_4" Overwrite="True" Path="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;DailyD_Template.xls&quot;]" />
                              </Sequence>
                              <Sequence DisplayName="Take Data wings" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtbWings]" DisplayName="Execute query" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_7" ProviderName="System.Data.Odbc" Sql="[&quot;SELECT DPTC9H,PSHN9H,ITMC9H,SUBSTR(LN1C9H,1,2) as Section, LN1C9H, LN2C9H, LN1C9H||'-'||LN2C9H as LineCode, CN2I09, PCPQ9H, EPFU9H,EPFC9H,RADU9H,PCPC9H,SIGN( CASE WHEN (LN1C9H='541' OR LN1C9H='550' OR LN1C9H='531') THEN (CASE WHEN EPFU9H=RADU9H THEN (INT('0'||PCPC9H) - INT(EPFC9H)) ELSE RADU9H-EPFU9H END) ELSE (RADU9H-EPFU9H) END ) as Sign FROM WAVEDLIB.F9H00 LEFT JOIN WAVEDLIB.C0900 ON DGRC09 = 'LN1C' and SUBSTR(DDTC09,1,3) = LN1C9H and SUBSTR(DDTC09,4,2) = LN2C9H and SUBSTR(DDTC09,6,2) = DPTC9H WHERE RADU9H&gt;=&quot; + strDaywork + &quot; and RADU9H&lt;= &quot; + strDaywork + &quot; and PCPQ9H &gt; 0   ORDER BY DPTC9H,PSHN9H,ITMC9H&quot;]" ConnectionString="Dsn=WAVEDLIB;system=10.246.194.1;uid=ROBOT;dbq=QGPL WAVEDLIB;dftpkglib=QGPL;languageid=ENU;pkg=QGPL/DEFAULT(IBM),2,0,1,0,512;qrystglmt=-1">
                                  <ui:ExecuteQuery.Parameters>
                                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                  </ui:ExecuteQuery.Parameters>
                                </ui:ExecuteQuery>
                                <Sequence DisplayName="Open File Daily1" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Sequence DisplayName="DaiLY" sap:VirtualizedContainerService.HintSize="242,234" sap2010:WorkflowViewState.IdRef="Sequence_40">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" Workbook="[wbInputWing]" WorkbookPath="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;DailyD&quot;+DayCurrent+&quot;.xlsx&quot;]">
                                      <ui:ExcelApplicationScope.Body>
                                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,659" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="OffAlter" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_1" />
                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtbWings]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="Sheet1" StartingCell="A2" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="saveValue22" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_2" />
                                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="XoaValue" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_3" />
                                            <ui:ExcelReadRange AddHeaders="False" DataTable="[dtbDaiLy]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" Range="A2" SheetName="Sheet1" />
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ExcelApplicationScope.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelApplicationScope>
                                    <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_3" Workbook="[wbInputWing]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelCloseWorkbook>
                                  </Sequence>
                                  <Sequence DisplayName="DaiLyD" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="587,252" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" Workbook="[wbDaiLyD]" WorkbookPath="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;DailyD&quot;+DayCurrent+&quot;.xls&quot;]">
                                      <ui:ExcelApplicationScope.Body>
                                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="242,143" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="CommentOut_13">
                                              <ui:CommentOut.Body>
                                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_216">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtbDaiLy]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_3" SheetName="DETAIL" StartingCell="A4" />
                                                </Sequence>
                                              </ui:CommentOut.Body>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:CommentOut>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ExcelApplicationScope.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelApplicationScope>
                                    <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="587,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_4" Workbook="[wbDaiLyD]" />
                                  </Sequence>
                                </Sequence>
                              </Sequence>
                              <Sequence DisplayName="Check Day2 Month 4" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtbWorkT4]" DisplayName="Execute query" sap:VirtualizedContainerService.HintSize="354,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_8" ProviderName="System.Data.Odbc" Sql="[&quot;SELECT DAY FROM RPALIB.ROBOT_CALENDAR_NT where ucase(location) ='NT' AND day &lt;&quot; +strYear +&quot;0430&quot;+ &quot; AND  day &gt;&quot; + strYear + &quot;0401&quot; +&quot; order by day asc LiMIT 1&quot;]" ConnectionString="Dsn=WAVEDLIB;system=10.246.194.1;uid=ROBOT;dbq=QGPL WAVEDLIB;dftpkglib=QGPL;languageid=ENU;pkg=QGPL/DEFAULT(IBM),2,0,1,0,512;qrystglmt=-1">
                                  <ui:ExecuteQuery.Parameters>
                                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                  </ui:ExecuteQuery.Parameters>
                                </ui:ExecuteQuery>
                                <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtbWorkT4]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="354,300" sap2010:WorkflowViewState.IdRef="ForEachRow_7">
                                  <ui:ForEachRow.Body>
                                    <ActivityAction x:TypeArguments="sd:DataRow">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strDayT4]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ForEachRow.Body>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:ForEachRow>
                              </Sequence>
                            </Sequence>
                            <Sequence DisplayName="Check Day 2 Month 4" sap:VirtualizedContainerService.HintSize="242,143" sap2010:WorkflowViewState.IdRef="Sequence_157">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If Condition="[DayCurrent = Trim(strDayT4)]" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="If_14">
                                <If.Then>
                                  <Sequence DisplayName="Day 2 Month 4" sap:VirtualizedContainerService.HintSize="913,8889" sap2010:WorkflowViewState.IdRef="Sequence_212">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Sequence DisplayName="Copy Template New" sap:VirtualizedContainerService.HintSize="871,249" sap2010:WorkflowViewState.IdRef="Sequence_185">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:CopyFile ContinueOnError="{x:Null}" Destination="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Daily Delay Report MF ASS &quot;+strYear+&quot;.xlsx&quot;]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="384,157" sap2010:WorkflowViewState.IdRef="CopyFile_18" Overwrite="True" Path="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Daily Delay Report MF ASS Template.xlsx&quot;]" />
                                    </Sequence>
                                    <Sequence DisplayName=" Day 2 Month 4" sap:VirtualizedContainerService.HintSize="871,8508" sap2010:WorkflowViewState.IdRef="Sequence_211">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Sequence DisplayName="DownLoad File Load Production" sap:VirtualizedContainerService.HintSize="829,249" sap2010:WorkflowViewState.IdRef="Sequence_186">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:CopyFile ContinueOnError="{x:Null}" Destination="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Load production&quot;+&quot;.xlsx&quot;]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="384,157" sap2010:WorkflowViewState.IdRef="CopyFile_19" Overwrite="True" Path="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Load production.xlsx&quot;]" />
                                      </Sequence>
                                      <Sequence DisplayName="Take database " sap:VirtualizedContainerService.HintSize="829,8127" sap2010:WorkflowViewState.IdRef="Sequence_264">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtbLoadProduct]" DisplayName="Execute query" sap:VirtualizedContainerService.HintSize="787,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_33" ProviderName="System.Data.Odbc" Sql="[&quot;SELECT OR,A.PR,LINE1,LINE2,WASHING,SUBSTRING(B.CN1I09,Position,10) AS WASHING1,ITEMCODE,ITEM_NAME1,ITEM_NAME2,SLIDER,LENGTH,UNIT_LEN,COLOR,RE_QTY,START_DATE,START_TIME,EST_DATE,EST_TIME,CUSTOMER, BUYER,PRO_STATUS,REMAKEFLAG, LN1,MC1,LN2,MC2,LN3,MC3,LN4,MC4,LN5,MC5,LN6,MC6 FROM (SELECT OR,PRO2.PR,LINE1,LINE2,CN1I09 as WASHING,ITEMCODE,ITEM_NAME1,ITEM_NAME2,LEFT(SLDCA0,2) AS SLIDER,LENGTH,UNIT_LEN,COLOR,RE_QTY,START_DATE,START_TIME,EST_DATE,EST_TIME,CUSTOMER,BUYER,PRO_STATUS,REMAKEFLAG ,INSTR(CN1I09,'[') AS Position FROM PUBLICLIB.PRO_ONPRO2 PRO2 INNER JOIN WAVEDLIB.FA000 ON ITEMCODE=ITMCA0 LEFT JOIN WAVEDLIB.C0900 ON LEFT(DDTC09,5)=LINE1||LINE2 AND DGRC09='LN1C') A LEFT JOIN WAVEDLIB.C0900 B ON A.WASHING=B.CN1I09 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN1,PPMCAB||' - '||PPTNAB AS MC1, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP1 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) C ON C.PR1=A.PR AND POP1=1 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN2,PPMCAB||' - '||PPTNAB AS MC2, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP2 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) E ON E.PR1=A.PR AND POP2=2 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN3,PPMCAB||' - '||PPTNAB AS MC3, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP3 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) F ON F.PR1=A.PR AND POP3=3 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN4,PPMCAB||' - '||PPTNAB AS MC4, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP4 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) D ON D.PR1=A.PR AND POP4=4 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN5,PPMCAB||' - '||PPTNAB AS MC5, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP5 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) G ON G.PR1=A.PR AND POP5=5 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN6,PPMCAB||' - '||PPTNAB AS MC6, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP6 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) H ON H.PR1=A.PR AND POP6=6 where EST_DATE =&quot; + strDaywork]" ConnectionString="Dsn=WAVEDLIB;system=10.246.194.1;uid=ROBOT;dbq=QGPL WAVEDLIB;dftpkglib=QGPL;languageid=ENU;pkg=QGPL/DEFAULT(IBM),2,0,1,0,512;qrystglmt=-1">
                                          <ui:ExecuteQuery.Parameters>
                                            <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                          </ui:ExecuteQuery.Parameters>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:ExecuteQuery>
                                        <Sequence DisplayName="write database" sap:VirtualizedContainerService.HintSize="787,242" sap2010:WorkflowViewState.IdRef="Sequence_235">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_39" Workbook="[wbLoadProduct]" WorkbookPath="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Load production&quot;+&quot;.xlsx&quot;]">
                                            <ui:ExcelApplicationScope.Body>
                                              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                </ActivityAction.Argument>
                                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="568,2174" sap2010:WorkflowViewState.IdRef="Sequence_234">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="OffAlter" sap:VirtualizedContainerService.HintSize="526,51" sap2010:WorkflowViewState.IdRef="InvokeVBA_121" />
                                                  <ui:ExcelWriteRange AddHeaders="True" DataTable="[dtbLoadProduct]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="526,51" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_15" SheetName="Sheet1">
                                                    <ui:ExcelWriteRange.StartingCell>
                                                      <InArgument x:TypeArguments="x:String">
                                                        <Literal x:TypeArguments="x:String" Value="" />
                                                      </InArgument>
                                                    </ui:ExcelWriteRange.StartingCell>
                                                  </ui:ExcelWriteRange>
                                                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="VBAColumn2" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_122" />
                                                  <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="526,51" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_25" SheetName="Sheet1" Text="OCM" />
                                                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="VlookupTest" sap:VirtualizedContainerService.HintSize="526,51" sap2010:WorkflowViewState.IdRef="InvokeVBA_123" />
                                                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="CheckOR" sap:VirtualizedContainerService.HintSize="526,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_124" />
                                                  <ui:ExcelReadRange AddHeaders="False" DataTable="[dtbLoadProduct2]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="526,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_22" Range="A2" SheetName="Sheet1" />
                                                  <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_83">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Int32">[In32VmarRow]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Int32">[dtbLoadProduct2.Rows.Count]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Sequence DisplayName="MCF" sap:VirtualizedContainerService.HintSize="526,1301" sap2010:WorkflowViewState.IdRef="Sequence_233">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="MFC" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_125" />
                                                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="FMFC" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_126" />
                                                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="FMFO" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_127" />
                                                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="FMFM" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_128" />
                                                    <If Condition="[wbLoadProduct.GetSheets.Contains(&quot;MFC1&quot;)]" sap:VirtualizedContainerService.HintSize="484,207" sap2010:WorkflowViewState.IdRef="If_24">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <If.Then>
                                                        <ui:ExcelReadCell Cell="A1" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_22" SheetName="MFC1">
                                                          <ui:ExcelReadCell.Result>
                                                            <OutArgument x:TypeArguments="ui:GenericValue">[strMFC]</OutArgument>
                                                          </ui:ExcelReadCell.Result>
                                                        </ui:ExcelReadCell>
                                                      </If.Then>
                                                    </If>
                                                    <If Condition="[wbLoadProduct.GetSheets.Contains(&quot;MFO1&quot;)]" sap:VirtualizedContainerService.HintSize="484,207" sap2010:WorkflowViewState.IdRef="If_25">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <If.Then>
                                                        <ui:ExcelReadCell Cell="A1" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_23" SheetName="MFO1">
                                                          <ui:ExcelReadCell.Result>
                                                            <OutArgument x:TypeArguments="ui:GenericValue">[strMFO]</OutArgument>
                                                          </ui:ExcelReadCell.Result>
                                                        </ui:ExcelReadCell>
                                                      </If.Then>
                                                    </If>
                                                    <If Condition="[wbLoadProduct.GetSheets.Contains(&quot;MFM1&quot;)]" sap:VirtualizedContainerService.HintSize="484,207" sap2010:WorkflowViewState.IdRef="If_26">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <If.Then>
                                                        <ui:ExcelReadCell Cell="A1" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_24" SheetName="MFM1">
                                                          <ui:ExcelReadCell.Result>
                                                            <OutArgument x:TypeArguments="ui:GenericValue">[strMFM]</OutArgument>
                                                          </ui:ExcelReadCell.Result>
                                                        </ui:ExcelReadCell>
                                                      </If.Then>
                                                    </If>
                                                  </Sequence>
                                                </Sequence>
                                              </ActivityAction>
                                            </ui:ExcelApplicationScope.Body>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:ExcelApplicationScope>
                                          <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_39" Workbook="[wbLoadProduct]">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:ExcelCloseWorkbook>
                                        </Sequence>
                                        <Sequence DisplayName="Open File Template MF" sap:VirtualizedContainerService.HintSize="787,5024" sap2010:WorkflowViewState.IdRef="Sequence_253">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Sequence DisplayName="Take PROD" sap:VirtualizedContainerService.HintSize="745,670" sap2010:WorkflowViewState.IdRef="Sequence_238">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Sequence DisplayName="Open File  DailyD" sap:VirtualizedContainerService.HintSize="634,578" sap2010:WorkflowViewState.IdRef="Sequence_237">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="592,387" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_40" WorkbookPath="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;DailyD&quot;+DayCurrent+&quot;.xlsx&quot;]">
                                                <ui:ExcelApplicationScope.Body>
                                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                    </ActivityAction.Argument>
                                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,278" sap2010:WorkflowViewState.IdRef="Sequence_236">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="Qty" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_129" />
                                                      <ui:ExcelReadCell Cell="A1" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_25" SheetName="Sheet2">
                                                        <ui:ExcelReadCell.Result>
                                                          <OutArgument x:TypeArguments="ui:GenericValue">[strPROD]</OutArgument>
                                                        </ui:ExcelReadCell.Result>
                                                      </ui:ExcelReadCell>
                                                    </Sequence>
                                                  </ActivityAction>
                                                </ui:ExcelApplicationScope.Body>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:ExcelApplicationScope>
                                              <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="592,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_40" Workbook="[wbInputWing]">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:ExcelCloseWorkbook>
                                            </Sequence>
                                          </Sequence>
                                          <Sequence DisplayName="Sum Day Recent 2" sap:VirtualizedContainerService.HintSize="745,1397" sap2010:WorkflowViewState.IdRef="Sequence_243">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Sequence DisplayName="Delay by Recent day 2" sap:VirtualizedContainerService.HintSize="703,668" sap2010:WorkflowViewState.IdRef="Sequence_240">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtbDelayWork2]" DisplayName="Execute query" sap:VirtualizedContainerService.HintSize="661,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_34" ProviderName="System.Data.Odbc" Sql="[&quot;SELECT  sum(RE_QTY) as sum FROM (SELECT OR,PRO2.PR,LINE1,LINE2,CN1I09 as WASHING,ITEMCODE,ITEM_NAME1,ITEM_NAME2,LEFT(SLDCA0,2) AS SLIDER,LENGTH,UNIT_LEN,COLOR,RE_QTY,START_DATE,START_TIME,EST_DATE,EST_TIME,CUSTOMER,BUYER,PRO_STATUS,REMAKEFLAG ,INSTR(CN1I09,'[') AS Position FROM PUBLICLIB.PRO_ONPRO2 PRO2 INNER JOIN WAVEDLIB.FA000 ON ITEMCODE=ITMCA0 LEFT JOIN WAVEDLIB.C0900 ON LEFT(DDTC09,5)=LINE1||LINE2 AND DGRC09='LN1C') A LEFT JOIN WAVEDLIB.C0900 B ON A.WASHING=B.CN1I09 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN1,PPMCAB||' - '||PPTNAB AS MC1, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP1 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) C ON C.PR1=A.PR AND POP1=1 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN2,PPMCAB||' - '||PPTNAB AS MC2, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP2 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) E ON E.PR1=A.PR AND POP2=2 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN3,PPMCAB||' - '||PPTNAB AS MC3, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP3 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) F ON F.PR1=A.PR AND POP3=3 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN4,PPMCAB||' - '||PPTNAB AS MC4, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP4 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) D ON D.PR1=A.PR AND POP4=4 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN5,PPMCAB||' - '||PPTNAB AS MC5, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP5 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) G ON G.PR1=A.PR AND POP5=5 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN6,PPMCAB||' - '||PPTNAB AS MC6, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP6 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) H ON H.PR1=A.PR AND POP6=6 WHERE  EST_DATE  = &quot; + strDaywork2]" ConnectionString="Dsn=WAVEDLIB;system=10.246.194.1;uid=ROBOT;dbq=QGPL WAVEDLIB;dftpkglib=QGPL;languageid=ENU;pkg=QGPL/DEFAULT(IBM),2,0,1,0,512;qrystglmt=-1">
                                                <ui:ExecuteQuery.Parameters>
                                                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                                </ui:ExecuteQuery.Parameters>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:ExecuteQuery>
                                              <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtbDelayWork2]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="661,448" sap2010:WorkflowViewState.IdRef="ForEachRow_26">
                                                <ui:ForEachRow.Body>
                                                  <ActivityAction x:TypeArguments="sd:DataRow">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                                    </ActivityAction.Argument>
                                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="611,300" sap2010:WorkflowViewState.IdRef="Sequence_239">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <If Condition="[string.IsNullOrEmpty(row(0).ToString)]" sap:VirtualizedContainerService.HintSize="569,208" sap2010:WorkflowViewState.IdRef="If_27">
                                                        <If.Then>
                                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_84">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Int32">[In32day2]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </If.Then>
                                                        <If.Else>
                                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_85">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Int32">[In32day2]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Int32">[CInt(row(0).ToString)]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </If.Else>
                                                      </If>
                                                    </Sequence>
                                                  </ActivityAction>
                                                </ui:ForEachRow.Body>
                                              </ui:ForEachRow>
                                            </Sequence>
                                            <Sequence DisplayName="Delay by Recent day 1" sap:VirtualizedContainerService.HintSize="703,397" sap2010:WorkflowViewState.IdRef="Sequence_242">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtbDelayWork]" DisplayName="Execute query" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExecuteQuery_35" ProviderName="System.Data.Odbc" Sql="[&quot;SELECT  sum(RE_QTY) as sum FROM (SELECT OR,PRO2.PR,LINE1,LINE2,CN1I09 as WASHING,ITEMCODE,ITEM_NAME1,ITEM_NAME2,LEFT(SLDCA0,2) AS SLIDER,LENGTH,UNIT_LEN,COLOR,RE_QTY,START_DATE,START_TIME,EST_DATE,EST_TIME,CUSTOMER,BUYER,PRO_STATUS,REMAKEFLAG ,INSTR(CN1I09,'[') AS Position FROM PUBLICLIB.PRO_ONPRO2 PRO2 INNER JOIN WAVEDLIB.FA000 ON ITEMCODE=ITMCA0 LEFT JOIN WAVEDLIB.C0900 ON LEFT(DDTC09,5)=LINE1||LINE2 AND DGRC09='LN1C') A LEFT JOIN WAVEDLIB.C0900 B ON A.WASHING=B.CN1I09 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN1,PPMCAB||' - '||PPTNAB AS MC1, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP1 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) C ON C.PR1=A.PR AND POP1=1 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN2,PPMCAB||' - '||PPTNAB AS MC2, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP2 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) E ON E.PR1=A.PR AND POP2=2 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN3,PPMCAB||' - '||PPTNAB AS MC3, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP3 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) F ON F.PR1=A.PR AND POP3=3 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN4,PPMCAB||' - '||PPTNAB AS MC4, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP4 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) D ON D.PR1=A.PR AND POP4=4 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN5,PPMCAB||' - '||PPTNAB AS MC5, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP5 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) G ON G.PR1=A.PR AND POP5=5 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN6,PPMCAB||' - '||PPTNAB AS MC6, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP6 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) H ON H.PR1=A.PR AND POP6=6 WHERE  EST_DATE  = &quot; + strDaywork]" ConnectionString="Dsn=WAVEDLIB;system=10.246.194.1;uid=ROBOT;dbq=QGPL WAVEDLIB;dftpkglib=QGPL;languageid=ENU;pkg=QGPL/DEFAULT(IBM),2,0,1,0,512;qrystglmt=-1">
                                                <ui:ExecuteQuery.Parameters>
                                                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                                </ui:ExecuteQuery.Parameters>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:ExecuteQuery>
                                              <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtbDelayWork]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="307,214" sap2010:WorkflowViewState.IdRef="ForEachRow_27">
                                                <ui:ForEachRow.Body>
                                                  <ActivityAction x:TypeArguments="sd:DataRow">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                                    </ActivityAction.Argument>
                                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_241">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <If Condition="[string.IsNullOrEmpty(row(0).ToString)]" sap:VirtualizedContainerService.HintSize="569,208" sap2010:WorkflowViewState.IdRef="If_28">
                                                        <If.Then>
                                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_86">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Int32">[In32day1]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </If.Then>
                                                        <If.Else>
                                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_87">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Int32">[In32day2]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Int32">[CInt(row(0).ToString)]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </If.Else>
                                                      </If>
                                                    </Sequence>
                                                  </ActivityAction>
                                                </ui:ForEachRow.Body>
                                              </ui:ForEachRow>
                                            </Sequence>
                                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_88">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[in32PS4]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">[In32day1 + In32day2]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_89">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[strPCS4]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[Convert.ToString(in32PS4)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                          <Sequence DisplayName="Sum All Day" sap:VirtualizedContainerService.HintSize="745,234" sap2010:WorkflowViewState.IdRef="Sequence_245">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtbSumAll]" DisplayName="Execute query" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExecuteQuery_36" ProviderName="System.Data.Odbc" Sql="[&quot;SELECT  sum(RE_QTY) as sum FROM (SELECT OR,PRO2.PR,LINE1,LINE2,CN1I09 as WASHING,ITEMCODE,ITEM_NAME1,ITEM_NAME2,LEFT(SLDCA0,2) AS SLIDER,LENGTH,UNIT_LEN,COLOR,RE_QTY,START_DATE,START_TIME,EST_DATE,EST_TIME,CUSTOMER,BUYER,PRO_STATUS,REMAKEFLAG ,INSTR(CN1I09,'[') AS Position FROM PUBLICLIB.PRO_ONPRO2 PRO2 INNER JOIN WAVEDLIB.FA000 ON ITEMCODE=ITMCA0 LEFT JOIN WAVEDLIB.C0900 ON LEFT(DDTC09,5)=LINE1||LINE2 AND DGRC09='LN1C') A LEFT JOIN WAVEDLIB.C0900 B ON A.WASHING=B.CN1I09 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN1,PPMCAB||' - '||PPTNAB AS MC1, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP1 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) C ON C.PR1=A.PR AND POP1=1 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN2,PPMCAB||' - '||PPTNAB AS MC2, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP2 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) E ON E.PR1=A.PR AND POP2=2 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN3,PPMCAB||' - '||PPTNAB AS MC3, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP3 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) F ON F.PR1=A.PR AND POP3=3 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN4,PPMCAB||' - '||PPTNAB AS MC4, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP4 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) D ON D.PR1=A.PR AND POP4=4 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN5,PPMCAB||' - '||PPTNAB AS MC5, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP5 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) G ON G.PR1=A.PR AND POP5=5 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN6,PPMCAB||' - '||PPTNAB AS MC6, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP6 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) H ON H.PR1=A.PR AND POP6=6 WHERE  EST_DATE  &gt;= &quot; +&quot;'&quot; + strDayStart +&quot;'&quot; +&quot;  AND  EST_DATE &lt;= '&quot; +strDayEnd + &quot;'&quot;]" ConnectionString="Dsn=WAVEDLIB;system=10.246.194.1;uid=ROBOT;dbq=QGPL WAVEDLIB;dftpkglib=QGPL;languageid=ENU;pkg=QGPL/DEFAULT(IBM),2,0,1,0,512;qrystglmt=-1">
                                              <ui:ExecuteQuery.Parameters>
                                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                              </ui:ExecuteQuery.Parameters>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExecuteQuery>
                                            <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtbSumAll]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ForEachRow_28">
                                              <ui:ForEachRow.Body>
                                                <ActivityAction x:TypeArguments="sd:DataRow">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                                  </ActivityAction.Argument>
                                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_244">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_90">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[strSumMonth]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </ActivityAction>
                                              </ui:ForEachRow.Body>
                                            </ui:ForEachRow>
                                          </Sequence>
                                          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="745,2113" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_41" Workbook="[wbMFDeLay]" WorkbookPath="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Daily Delay Report MF ASS &quot;+strYear+&quot;.xlsx&quot;]">
                                            <ui:ExcelApplicationScope.Body>
                                              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                </ActivityAction.Argument>
                                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="526,2004" sap2010:WorkflowViewState.IdRef="Sequence_248">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="436,60" sap2010:WorkflowViewState.IdRef="Assign_91">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[ConvertDayWork]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[strDaywork]</InArgument>
                                                    </Assign.Value>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </Assign>
                                                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="FindLast2" EntryMethodParameters="[{&quot;Delay by day&quot;,ConvertDayWork,strPROD,strPCS4,In32VmarRow}]" sap:VirtualizedContainerService.HintSize="436,51" sap2010:WorkflowViewState.IdRef="InvokeVBA_130" />
                                                  <ui:ExcelWriteCell Cell="B5" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="436,51" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_26" SheetName="PROD RECORD" Text="[strYear]" />
                                                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="SumMonthNoSQL" EntryMethodParameters="[{&quot;Delay by day&quot;,strDaywork}]" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_131" />
                                                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="484,257" sap2010:WorkflowViewState.IdRef="CommentOut_15">
                                                    <ui:CommentOut.Body>
                                                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_246">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="SumMonths" EntryMethodParameters="[{&quot;PROD RECORD&quot;, strSumMonth , strDaywork}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_132" />
                                                      </Sequence>
                                                    </ui:CommentOut.Body>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:CommentOut>
                                                  <If Condition="[In32day2 &gt;0]" sap:VirtualizedContainerService.HintSize="484,207" sap2010:WorkflowViewState.IdRef="If_29">
                                                    <If.Then>
                                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="DelayUnitDay2" EntryMethodParameters="[{&quot;PROD RECORD&quot;,strDaywork,strMFC,strMFO,strMFM}]" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeVBA_133" />
                                                    </If.Then>
                                                    <If.Else>
                                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="DelayUnit" EntryMethodParameters="[{&quot;PROD RECORD&quot;,strDaywork,strMFC,strMFO,strMFM}]" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeVBA_134" />
                                                    </If.Else>
                                                  </If>
                                                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="484,98" sap2010:WorkflowViewState.IdRef="CommentOut_16">
                                                    <ui:CommentOut.Body>
                                                      <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_247">
                                                        <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="DelayUnit" EntryMethodParameters="[{&quot;PROD RECORD&quot;,strDaywork,strMFC,strMFO,strMFM}]" sap:VirtualizedContainerService.HintSize="436,51" sap2010:WorkflowViewState.IdRef="InvokeVBA_135" />
                                                      </Sequence>
                                                    </ui:CommentOut.Body>
                                                  </ui:CommentOut>
                                                  <ui:InvokeVBA CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="SumPROD" EntryMethodParameters="[{&quot;Delay by day&quot;,strDaywork}]" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_136" OutputValue="[TotalPROD]" />
                                                  <ui:InvokeVBA CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="SumDelaypcs" EntryMethodParameters="[{&quot;Delay by day&quot;,strDaywork}]" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_137" OutputValue="[TotalDelaypcs]" />
                                                  <ui:InvokeVBA CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="SumDelayPR" EntryMethodParameters="[{&quot;Delay by day&quot;,strDaywork}]" sap:VirtualizedContainerService.HintSize="436,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_138" OutputValue="[TotalDalayPR]" />
                                                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="GraphPROD" EntryMethodParameters="[{&quot;Graph&quot;,strDaywork,TotalPROD.ToString}]" sap:VirtualizedContainerService.HintSize="436,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_139" />
                                                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="GraphDelaypcs" EntryMethodParameters="[{&quot;Graph&quot;,strDaywork,TotalDelaypcs.ToString}]" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_140" />
                                                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="GraphDelayPR" EntryMethodParameters="[{&quot;Graph&quot;,strDaywork,TotalDalayPR.ToString}]" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_141" />
                                                  <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_41" Workbook="[wbMFDeLay]">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:ExcelCloseWorkbook>
                                                </Sequence>
                                              </ActivityAction>
                                            </ui:ExcelApplicationScope.Body>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:ExcelApplicationScope>
                                          <Sequence DisplayName="Open File data" sap:VirtualizedContainerService.HintSize="745,358" sap2010:WorkflowViewState.IdRef="Sequence_252">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="578,175" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_42" Workbook="[wbLoadProduct]" WorkbookPath="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Load production&quot;+&quot;.xlsx&quot;]">
                                              <ui:ExcelApplicationScope.Body>
                                                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                  </ActivityAction.Argument>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_250">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,278" sap2010:WorkflowViewState.IdRef="Sequence_249">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="CheckData" EntryMethodParameters="[{&quot;Sheet1&quot;,strDaywork}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_142" />
                                                      <ui:ExcelReadRange AddHeaders="False" DataTable="[dtbLoadSheet1]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_23" Range="A2" SheetName="Sheet1" />
                                                    </Sequence>
                                                    <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="376,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_42" Workbook="[wbLoadProduct]">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:ExcelCloseWorkbook>
                                                  </Sequence>
                                                </ActivityAction>
                                              </ui:ExcelApplicationScope.Body>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelApplicationScope>
                                            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_43" Workbook="[wbMFDeLay]" WorkbookPath="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Daily Delay Report MF ASS &quot;+strYear+&quot;.xlsx&quot;]">
                                              <ui:ExcelApplicationScope.Body>
                                                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                  </ActivityAction.Argument>
                                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="304,425" sap2010:WorkflowViewState.IdRef="Sequence_251">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:ExcelReadRange AddHeaders="False" DataTable="[dtbData]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="ExcelReadRange_24" SheetName="Data">
                                                      <ui:ExcelReadRange.Range>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <Literal x:TypeArguments="x:String" Value="" />
                                                        </InArgument>
                                                      </ui:ExcelReadRange.Range>
                                                    </ui:ExcelReadRange>
                                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_92">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Int32">[in32VmaxData]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Int32">[dtbData.rows.Count +1]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtbLoadSheet1]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_16" SheetName="Data" StartingCell="[&quot;A&quot;+in32VmaxData.ToString]" />
                                                    <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_43" Workbook="[wbMFDeLay]" />
                                                  </Sequence>
                                                </ActivityAction>
                                              </ui:ExcelApplicationScope.Body>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelApplicationScope>
                                          </Sequence>
                                        </Sequence>
                                        <Sequence DisplayName="Open File Note" sap:VirtualizedContainerService.HintSize="787,804" sap2010:WorkflowViewState.IdRef="Sequence_258">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Sequence DisplayName="F" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_255">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="979,175" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_44" Workbook="[wbMFNote]" WorkbookPath="[&quot;\\ykkvnm.com\vnmfs\YKKDATA\DEPARTMENT\PRODUCTION\MF\HA - MF\2019\18 Delay MF\RPA\MF ASS&quot; +&quot;\&quot;+&quot;Daily Delay Report MF ASS &quot;+strYear+&quot; - TEST&quot; +&quot;.xlsx&quot;]">
                                              <ui:ExcelApplicationScope.Body>
                                                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                  </ActivityAction.Argument>
                                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="242,234" sap2010:WorkflowViewState.IdRef="Sequence_254">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:ExcelReadRange AddHeaders="True" DataTable="[dtbMFNote]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelReadRange_25" SheetName="Data">
                                                      <ui:ExcelReadRange.Range>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <Literal x:TypeArguments="x:String" Value="" />
                                                        </InArgument>
                                                      </ui:ExcelReadRange.Range>
                                                    </ui:ExcelReadRange>
                                                    <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_44" Workbook="[wbMFNote]" />
                                                  </Sequence>
                                                </ActivityAction>
                                              </ui:ExcelApplicationScope.Body>
                                            </ui:ExcelApplicationScope>
                                          </Sequence>
                                          <Sequence DisplayName="Open Daily" sap:VirtualizedContainerService.HintSize="717,606" sap2010:WorkflowViewState.IdRef="Sequence_257">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="675,514" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_45" Workbook="[wbMFDeLay]" WorkbookPath="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Daily Delay Report MF ASS &quot;+strYear+&quot;.xlsx&quot;]">
                                              <ui:ExcelApplicationScope.Body>
                                                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                  </ActivityAction.Argument>
                                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,405" sap2010:WorkflowViewState.IdRef="Sequence_256">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:ExcelWriteRange AddHeaders="True" DataTable="[dtbMFNote]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_17" SheetName="Sheet2">
                                                      <ui:ExcelWriteRange.StartingCell>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <Literal x:TypeArguments="x:String" Value="" />
                                                        </InArgument>
                                                      </ui:ExcelWriteRange.StartingCell>
                                                    </ui:ExcelWriteRange>
                                                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="NoteMF" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_143" />
                                                    <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_45" Workbook="[wbMFDeLay]" />
                                                  </Sequence>
                                                </ActivityAction>
                                              </ui:ExcelApplicationScope.Body>
                                            </ui:ExcelApplicationScope>
                                          </Sequence>
                                        </Sequence>
                                        <Sequence DisplayName="\\Send Mail Complete" sap:VirtualizedContainerService.HintSize="787,1231" sap2010:WorkflowViewState.IdRef="Sequence_262">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Sequence DisplayName="Sq\\ Send email Complete" sap:VirtualizedContainerService.HintSize="418,1139" sap2010:WorkflowViewState.IdRef="Sequence_261">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Sequence DisplayName="Sq\\ Creat mail body" sap:VirtualizedContainerService.HintSize="376,542" sap2010:WorkflowViewState.IdRef="Sequence_259">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="262,64" sap2010:WorkflowViewState.IdRef="Assign_93">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[stBodyMail]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String" xml:space="preserve">
&lt;html&gt; 
	
	&lt;head&gt; 
	&lt;meta http-equiv=Content-Type content=““text/html; charset=windows-1252”“&gt; 
	&lt;meta name=Generator content=““Microsoft Word 15 (filtered)”“&gt; 
	&lt;style&gt; 
	&lt;!-- 
	/* Font Definitions */ 
	@font-face 
	{font-family:Helv; 
	panose-1:2 11 6 4 2 2 2 3 2 4;} 
	@font-face 
	{font-family:Wingdings; 
	panose-1:5 0 0 0 0 0 0 0 0 0;} 
	@font-face 
	{font-family:”“MS Mincho”“; 
	panose-1:2 2 6 9 4 2 5 8 3 4;} 
	@font-face 
	{font-family:”“Cambria Math”“; 
	panose-1:2 4 5 3 5 4 6 3 2 4;} 
	@font-face 
	{font-family:Calibri; 
	panose-1:2 15 5 2 2 2 4 3 2 4;} 
	@font-face 
	{font-family:”“Segoe UI”“; 
	panose-1:2 11 5 2 4 2 4 2 2 3;} 
	@font-face 
	{font-family:Tahoma; 
	panose-1:2 11 6 4 3 5 4 4 2 4;} 
	@font-face 
	{font-family:Verdana; 
	panose-1:2 11 6 4 3 5 4 4 2 4;} 
	@font-face 
	{font-family:Webdings; 
	panose-1:5 3 1 2 1 5 9 6 7 3;} 
	@font-face 
	{font-family:”“\@MS Mincho”“; 
	panose-1:0 0 0 0 0 0 0 0 0 0;} 
	/* Style Definitions */ 
	p.MsoNormal, li.MsoNormal, div.MsoNormal 
	{margin-top:0cm; 
	margin-right:0cm; 
	margin-bottom:8.0pt; 
	margin-left:0cm; 
	line-height:106%; 
	font-size:11.0pt; 
	font-family:”“Calibri”“,sans-serif;} 
	.MsoChpDefault 
	{font-size:10.0pt; 
	font-family:”“Calibri”“,sans-serif;} 
	@page WordSection1 
	{size:612.0pt 792.0pt; 
	margin:72.0pt 72.0pt 72.0pt 72.0pt;} 
	div.WordSection1 
	{page:WordSection1;} 
	--&gt; 
	&lt;/style&gt; 
	
	&lt;/head&gt; 
	
	&lt;body lang=EN-US&gt; 
	
	&lt;div Class=WordSection1&gt; 
	
	&lt;p Class=MsoNormal&gt;&lt;span style='font-size:10.0pt;line-height:106%;font-family: 
	““Segoe UI”“,sans-serif;color:black'&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
	
	&lt;p Class=MsoNormal&gt;&lt;b&gt;&lt;span style='font-size:15px;line-height:106%; 
	font-family:”“Segoe UI”“,sans-serif;color:black'&gt;Dear [UserName] &lt;/span&gt;&lt;/b&gt;&lt;/p&gt; 
	
	&lt;p Class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'&gt;&lt;span 
	style='font-size:10.0pt;line-height:106%;font-family:”“Segoe UI”“,sans-serif; 
	color:black'&gt;[BodyMail]&lt;br&gt; 
	&lt;br&gt; 
	&lt;/span&gt;&lt;/p&gt; 
	
	&lt;p Class=MsoNormal&gt;&lt;span style='font-size:10.0pt;line-height:106%;font-family: 
	““Segoe UI”“,sans-serif;color:black'&gt;Best regards,&lt;/span&gt;&lt;/p&gt; 
	
	&lt;p Class=MsoNormal&gt;&lt;b&gt;&lt;span style='font-size:10.0pt;line-height:106%; 
	font-family:”“Segoe UI”“,sans-serif;color:black'&gt;Robotics (Mr.) – [NameMachine]&lt;/span&gt;&lt;/b&gt;&lt;/p&gt; 
	
	&lt;p Class=MsoNormal&gt;&lt;span style='font-size:8.0pt;line-height:106%;font-family: 
	““Verdana”“,sans-serif;color:black'&gt;===============================================&lt;br&gt; 
	&lt;/span&gt;&lt;span style='font-size:8.0pt;line-height:106%;font-family:”“Verdana”“,sans-serif; 
	color:navy'&gt;| &lt;/span&gt;&lt;span style='font-size:10.0pt;line-height:106%;font-family: 
	Wingdings;color:navy'&gt;*&lt;/span&gt;&lt;span style='font-size:10.0pt;line-height:106%; 
	font-family:”“Verdana”“,sans-serif;color:navy'&gt; &lt;/span&gt;&lt;span style='font-size: 
	8.0pt;line-height:106%;font-family:”“Verdana”“,sans-serif;color:navy'&gt;Email: &lt;u&gt;developer@ykk.com.vn&lt;/u&gt; 
	| Website:  &lt;u&gt;www.ykk.com.vn&lt;/u&gt;&lt;/span&gt;&lt;span style='font-size:8.0pt; 
	line-height:106%;font-family:”“Verdana”“,sans-serif;color:black'&gt; &lt;/span&gt;&lt;b&gt;&lt;span 
	style='font-size:8.0pt;line-height:106%;font-family:”“Verdana”“,sans-serif; 
	color:navy'&gt;&lt;br&gt; 
	&lt;br&gt; 
	YKK VietNam Co., LTD - Ho Chi Minh Branch Office&lt;/span&gt;&lt;/b&gt;&lt;span 
	style='font-size:8.0pt;line-height:106%;font-family:”“Verdana”“,sans-serif; 
	color:navy'&gt;&lt;br&gt; 
	4th Floor, AB Tower, 76 Le Lai St., Ben Thanh Ward, Dist. 1, HCMC, Viet Nam&lt;br&gt; 
	&lt;/span&gt;&lt;span style='font-size:8.0pt;line-height:106%;font-family:”“Verdana”“,sans-serif; 
	color:green'&gt;===============================================&lt;br&gt; 
	&lt;/span&gt;&lt;b&gt;&lt;span style='font-size:14.0pt;line-height:106%;font-family:Webdings; 
	color:green'&gt;P&lt;/span&gt;&lt;/b&gt;&lt;span style='font-size:6.0pt;line-height:106%; 
	font-family:”“Helv”“,sans-serif;color:black'&gt; &lt;/span&gt;&lt;b&gt;&lt;span style='font-size: 
	8.0pt;line-height:106%;font-family:”“Arial”“,sans-serif;color:green'&gt;&amp;quot;Please 
	consider the environment before printing this e-mail&amp;quot;&lt;br&gt; 
	&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style='font-size:6.0pt;line-height:106%;font-family:”“Tahoma”“,sans-serif; 
	color:black'&gt;CONFIDENTIAL NOTE:&lt;/span&gt;&lt;/b&gt;&lt;span style='font-size:7.0pt; 
	line-height:106%;font-family:”“Tahoma”“,sans-serif;color:black'&gt; The information 
	contained In this email Is intended only For the use Of the individual Or 
	entity named&lt;br&gt; 
	above And may contain information that Is privileged, confidential And exempt 
	From disclosure under applicable law. If the&lt;br&gt; 
	reader Of this message Is Not the intended recipient, you are hereby notified 
	that any dissemination, distribution Or copying&lt;br&gt; 
	Of this communication Is strictly prohibited. Thank you.&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
	
	&lt;/div&gt; 
	
	&lt;/body&gt; 
	
	&lt;/html&gt;
</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_94">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[stBodyNotificationMail]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String" xml:space="preserve">["Chương trình đã chạy thành công  anh vui lòng check lại file kết quả ở trên ." +" Thanks !"]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_95">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[stMachineName]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[environment.MachineName]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <p:ReplaceString DisplayName="Replace string\\ Replace UserName mail" ExistingValue="%[UserName]" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="ReplaceString_19" Input="[stBodyMail]" Replacement="A. Quang" Result="[stBodyMail]" />
                                              <p:ReplaceString DisplayName="Replace string\\ Replace body mail" ExistingValue="%[BodyMail]" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="ReplaceString_20" Input="[stBodyMail]" Replacement="[stBodyNotificationMail]" Result="[stBodyMail]" />
                                              <p:ReplaceString DisplayName="Replace string\\ Replace Name Machine Mail" ExistingValue="%[NameMachine]" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="ReplaceString_21" Input="[stBodyMail]" Replacement="[stMachineName]" Result="[stBodyMail]" />
                                            </Sequence>
                                            <ui:SendMail Bcc="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Body="[stBodyMail]" Cc="[&quot;ngoctham@ykk.com.vn&quot; +&quot;,&quot; +&quot;vansang@ykk.com.vn&quot;]" DisplayName="Send SMTP Mail Message" Email="[dicDIC(&quot;EmailAddressDeveloper&quot;).ToString]" EnableSSL="True" sap:VirtualizedContainerService.HintSize="376,145" sap2010:WorkflowViewState.IdRef="SendMail_7" IsBodyHtml="True" Name="[dicDIC(&quot;NameSenderMail&quot;).ToString]" Password="[dicDIC(&quot;EmailPassword&quot;).ToString]" Port="25" SecureConnection="Auto" Server="[dicDIC(&quot;IPSendMailServer&quot;).ToString]" Subject="DAILY DELAY REPORT MF ASS" To="vanquang@ykk.com.vn">
                                              <ui:SendMail.Files>
                                                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                                  <InArgument x:TypeArguments="x:String">[dicDIC("FolderLocalDaiLyDelayReportMF").ToString+"\"+"Input"+"\"+"Daily Delay Report MF ASS "+strYear+".xlsx"]</InArgument>
                                                </scg:List>
                                              </ui:SendMail.Files>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:SendMail>
                                            <Sequence DisplayName="History  database" sap:VirtualizedContainerService.HintSize="376,280" sap2010:WorkflowViewState.IdRef="Sequence_260">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="x:String" Name="strEndTime" />
                                              </Sequence.Variables>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_96">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[strEndTime]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[Date.Now.ToString("dd/MM/yy hh:mm:ss")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExecuteQuery ContinueOnError="{x:Null}" DataTable="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute query" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_37" ProviderName="System.Data.Odbc" Sql="[&quot;UPDATE RPALIB.ROBOT_LOG_HCM_SCH SET RESULT = 'COMPLETE' , END_TIME = '&quot; + strEndTime + &quot; ' WHERE  START_TIME = ' &quot; + StartTime +&quot;'  &quot;]" ConnectionString="Dsn=RPALIB;uid=robot;pwd=robotics">
                                                <ui:ExecuteQuery.Parameters>
                                                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                                </ui:ExecuteQuery.Parameters>
                                              </ui:ExecuteQuery>
                                            </Sequence>
                                          </Sequence>
                                        </Sequence>
                                        <Sequence DisplayName="Copy File H" sap:VirtualizedContainerService.HintSize="787,446" sap2010:WorkflowViewState.IdRef="Sequence_263">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:CopyFile ContinueOnError="{x:Null}" Destination="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Daily Delay Report MF ASS &quot;+strYear+&quot;.xlsx&quot;]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="384,157" sap2010:WorkflowViewState.IdRef="CopyFile_26" Overwrite="True" Path="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Daily Delay Report MF ASS &quot;+strYear+&quot;.xlsx&quot;]" />
                                          <ui:CopyFile ContinueOnError="{x:Null}" Destination="[&quot;\\ykkvnm.com\vnmfs\YKKDATA\DEPARTMENT\PRODUCTION\MF\HA - MF\2019\18 Delay MF\RPA\MF ASS&quot; +&quot;\&quot;+&quot;Daily Delay Report MF ASS &quot;+strYear+&quot; - TEST&quot; +&quot;.xlsx&quot;]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="384,157" sap2010:WorkflowViewState.IdRef="CopyFile_27" Overwrite="True" Path="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Daily Delay Report MF ASS &quot;+strYear+&quot;.xlsx&quot;]" />
                                        </Sequence>
                                      </Sequence>
                                    </Sequence>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence DisplayName="Not Day 2 Month 4" sap:VirtualizedContainerService.HintSize="801,6134" sap2010:WorkflowViewState.IdRef="Sequence_184">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Sequence DisplayName="DownLoad File Load Production" sap:VirtualizedContainerService.HintSize="759,249" sap2010:WorkflowViewState.IdRef="Sequence_159">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:CopyFile ContinueOnError="{x:Null}" Destination="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Load production&quot;+&quot;.xlsx&quot;]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="384,157" sap2010:WorkflowViewState.IdRef="CopyFile_15" Overwrite="True" Path="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Load production.xlsx&quot;]" />
                                    </Sequence>
                                    <Sequence DisplayName="Take database " sap:VirtualizedContainerService.HintSize="759,5753" sap2010:WorkflowViewState.IdRef="Sequence_183">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtbLoadProduct]" DisplayName="Execute query" sap:VirtualizedContainerService.HintSize="717,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_21" ProviderName="System.Data.Odbc" Sql="[&quot;SELECT OR,A.PR,LINE1,LINE2,WASHING,SUBSTRING(B.CN1I09,Position,10) AS WASHING1,ITEMCODE,ITEM_NAME1,ITEM_NAME2,SLIDER,LENGTH,UNIT_LEN,COLOR,RE_QTY,START_DATE,START_TIME,EST_DATE,EST_TIME,CUSTOMER, BUYER,PRO_STATUS,REMAKEFLAG, LN1,MC1,LN2,MC2,LN3,MC3,LN4,MC4,LN5,MC5,LN6,MC6 FROM (SELECT OR,PRO2.PR,LINE1,LINE2,CN1I09 as WASHING,ITEMCODE,ITEM_NAME1,ITEM_NAME2,LEFT(SLDCA0,2) AS SLIDER,LENGTH,UNIT_LEN,COLOR,RE_QTY,START_DATE,START_TIME,EST_DATE,EST_TIME,CUSTOMER,BUYER,PRO_STATUS,REMAKEFLAG ,INSTR(CN1I09,'[') AS Position FROM PUBLICLIB.PRO_ONPRO2 PRO2 INNER JOIN WAVEDLIB.FA000 ON ITEMCODE=ITMCA0 LEFT JOIN WAVEDLIB.C0900 ON LEFT(DDTC09,5)=LINE1||LINE2 AND DGRC09='LN1C') A LEFT JOIN WAVEDLIB.C0900 B ON A.WASHING=B.CN1I09 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN1,PPMCAB||' - '||PPTNAB AS MC1, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP1 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) C ON C.PR1=A.PR AND POP1=1 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN2,PPMCAB||' - '||PPTNAB AS MC2, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP2 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) E ON E.PR1=A.PR AND POP2=2 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN3,PPMCAB||' - '||PPTNAB AS MC3, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP3 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) F ON F.PR1=A.PR AND POP3=3 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN4,PPMCAB||' - '||PPTNAB AS MC4, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP4 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) D ON D.PR1=A.PR AND POP4=4 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN5,PPMCAB||' - '||PPTNAB AS MC5, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP5 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) G ON G.PR1=A.PR AND POP5=5 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN6,PPMCAB||' - '||PPTNAB AS MC6, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP6 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) H ON H.PR1=A.PR AND POP6=6 where EST_DATE =&quot; + strDaywork]" ConnectionString="Dsn=WAVEDLIB;system=10.246.194.1;uid=ROBOT;dbq=QGPL WAVEDLIB;dftpkglib=QGPL;languageid=ENU;pkg=QGPL/DEFAULT(IBM),2,0,1,0,512;qrystglmt=-1">
                                        <ui:ExecuteQuery.Parameters>
                                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                        </ui:ExecuteQuery.Parameters>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExecuteQuery>
                                      <Sequence DisplayName="write database" sap:VirtualizedContainerService.HintSize="717,234" sap2010:WorkflowViewState.IdRef="Sequence_162">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_24" Workbook="[wbLoadProduct]" WorkbookPath="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Load production&quot;+&quot;.xlsx&quot;]">
                                          <ui:ExcelApplicationScope.Body>
                                            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                              </ActivityAction.Argument>
                                              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="568,2174" sap2010:WorkflowViewState.IdRef="Sequence_161">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="OffAlter" sap:VirtualizedContainerService.HintSize="526,51" sap2010:WorkflowViewState.IdRef="InvokeVBA_76" />
                                                <ui:ExcelWriteRange AddHeaders="True" DataTable="[dtbLoadProduct]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="526,51" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_10" SheetName="Sheet1">
                                                  <ui:ExcelWriteRange.StartingCell>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <Literal x:TypeArguments="x:String" Value="" />
                                                    </InArgument>
                                                  </ui:ExcelWriteRange.StartingCell>
                                                </ui:ExcelWriteRange>
                                                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="VBAColumn2" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_77" />
                                                <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="526,51" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_19" SheetName="Sheet1" Text="OCM" />
                                                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="VlookupTest" sap:VirtualizedContainerService.HintSize="526,51" sap2010:WorkflowViewState.IdRef="InvokeVBA_78" />
                                                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="CheckOR" sap:VirtualizedContainerService.HintSize="526,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_80" />
                                                <ui:ExcelReadRange AddHeaders="False" DataTable="[dtbLoadProduct2]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="526,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_14" Range="A2" SheetName="Sheet1" />
                                                <Assign sap:VirtualizedContainerService.HintSize="526,60" sap2010:WorkflowViewState.IdRef="Assign_51">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[In32VmarRow]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[dtbLoadProduct2.Rows.Count]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Sequence DisplayName="MCF" sap:VirtualizedContainerService.HintSize="526,1301" sap2010:WorkflowViewState.IdRef="Sequence_160">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="MFC" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_81" />
                                                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="FMFC" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_82" />
                                                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="FMFO" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_83" />
                                                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="FMFM" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_84" />
                                                  <If Condition="[wbLoadProduct.GetSheets.Contains(&quot;MFC1&quot;)]" sap:VirtualizedContainerService.HintSize="484,207" sap2010:WorkflowViewState.IdRef="If_15">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <If.Then>
                                                      <ui:ExcelReadCell Cell="A1" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_14" SheetName="MFC1">
                                                        <ui:ExcelReadCell.Result>
                                                          <OutArgument x:TypeArguments="ui:GenericValue">[strMFC]</OutArgument>
                                                        </ui:ExcelReadCell.Result>
                                                      </ui:ExcelReadCell>
                                                    </If.Then>
                                                  </If>
                                                  <If Condition="[wbLoadProduct.GetSheets.Contains(&quot;MFO1&quot;)]" sap:VirtualizedContainerService.HintSize="484,207" sap2010:WorkflowViewState.IdRef="If_16">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <If.Then>
                                                      <ui:ExcelReadCell Cell="A1" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_15" SheetName="MFO1">
                                                        <ui:ExcelReadCell.Result>
                                                          <OutArgument x:TypeArguments="ui:GenericValue">[strMFO]</OutArgument>
                                                        </ui:ExcelReadCell.Result>
                                                      </ui:ExcelReadCell>
                                                    </If.Then>
                                                  </If>
                                                  <If Condition="[wbLoadProduct.GetSheets.Contains(&quot;MFM1&quot;)]" sap:VirtualizedContainerService.HintSize="484,207" sap2010:WorkflowViewState.IdRef="If_17">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <If.Then>
                                                      <ui:ExcelReadCell Cell="A1" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_16" SheetName="MFM1">
                                                        <ui:ExcelReadCell.Result>
                                                          <OutArgument x:TypeArguments="ui:GenericValue">[strMFM]</OutArgument>
                                                        </ui:ExcelReadCell.Result>
                                                      </ui:ExcelReadCell>
                                                    </If.Then>
                                                  </If>
                                                </Sequence>
                                              </Sequence>
                                            </ActivityAction>
                                          </ui:ExcelApplicationScope.Body>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:ExcelApplicationScope>
                                        <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_25" Workbook="[wbLoadProduct]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:ExcelCloseWorkbook>
                                      </Sequence>
                                      <Sequence DisplayName="Copy File Template MF" sap:VirtualizedContainerService.HintSize="717,143" sap2010:WorkflowViewState.IdRef="Sequence_163">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:CopyFile ContinueOnError="{x:Null}" Destination="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Daily Delay Report MF ASS &quot;+strYear+&quot;.xlsx&quot;]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="CopyFile_16" Overwrite="True" Path="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Daily Delay Report MF ASS &quot;+strYear+&quot;.xlsx&quot;]" />
                                      </Sequence>
                                      <Sequence DisplayName="Open File Template MF" sap:VirtualizedContainerService.HintSize="717,2938" sap2010:WorkflowViewState.IdRef="Sequence_175">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Sequence DisplayName="Take PROD" sap:VirtualizedContainerService.HintSize="675,326" sap2010:WorkflowViewState.IdRef="Sequence_166">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Sequence DisplayName="Open File  DailyD" sap:VirtualizedContainerService.HintSize="242,234" sap2010:WorkflowViewState.IdRef="Sequence_165">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_25" WorkbookPath="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;DailyD&quot;+DayCurrent+&quot;.xlsx&quot;]">
                                              <ui:ExcelApplicationScope.Body>
                                                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                  </ActivityAction.Argument>
                                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,278" sap2010:WorkflowViewState.IdRef="Sequence_164">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="Qty" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_85" />
                                                    <ui:ExcelReadCell Cell="A1" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_17" SheetName="Sheet2">
                                                      <ui:ExcelReadCell.Result>
                                                        <OutArgument x:TypeArguments="ui:GenericValue">[strPROD]</OutArgument>
                                                      </ui:ExcelReadCell.Result>
                                                    </ui:ExcelReadCell>
                                                  </Sequence>
                                                </ActivityAction>
                                              </ui:ExcelApplicationScope.Body>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelApplicationScope>
                                            <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_26" Workbook="[wbInputWing]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelCloseWorkbook>
                                          </Sequence>
                                        </Sequence>
                                        <Sequence DisplayName="Sum Day Recent 2" sap:VirtualizedContainerService.HintSize="675,464" sap2010:WorkflowViewState.IdRef="Sequence_168">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Sequence DisplayName="Delay by Recent day 2" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_229">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtbDelayWork2]" DisplayName="Execute query" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExecuteQuery_31" ProviderName="System.Data.Odbc" Sql="[&quot;SELECT  sum(RE_QTY) as sum FROM (SELECT OR,PRO2.PR,LINE1,LINE2,CN1I09 as WASHING,ITEMCODE,ITEM_NAME1,ITEM_NAME2,LEFT(SLDCA0,2) AS SLIDER,LENGTH,UNIT_LEN,COLOR,RE_QTY,START_DATE,START_TIME,EST_DATE,EST_TIME,CUSTOMER,BUYER,PRO_STATUS,REMAKEFLAG ,INSTR(CN1I09,'[') AS Position FROM PUBLICLIB.PRO_ONPRO2 PRO2 INNER JOIN WAVEDLIB.FA000 ON ITEMCODE=ITMCA0 LEFT JOIN WAVEDLIB.C0900 ON LEFT(DDTC09,5)=LINE1||LINE2 AND DGRC09='LN1C') A LEFT JOIN WAVEDLIB.C0900 B ON A.WASHING=B.CN1I09 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN1,PPMCAB||' - '||PPTNAB AS MC1, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP1 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) C ON C.PR1=A.PR AND POP1=1 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN2,PPMCAB||' - '||PPTNAB AS MC2, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP2 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) E ON E.PR1=A.PR AND POP2=2 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN3,PPMCAB||' - '||PPTNAB AS MC3, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP3 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) F ON F.PR1=A.PR AND POP3=3 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN4,PPMCAB||' - '||PPTNAB AS MC4, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP4 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) D ON D.PR1=A.PR AND POP4=4 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN5,PPMCAB||' - '||PPTNAB AS MC5, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP5 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) G ON G.PR1=A.PR AND POP5=5 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN6,PPMCAB||' - '||PPTNAB AS MC6, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP6 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) H ON H.PR1=A.PR AND POP6=6 WHERE  EST_DATE  = &quot; + strDaywork2]" ConnectionString="Dsn=WAVEDLIB;system=10.246.194.1;uid=ROBOT;dbq=QGPL WAVEDLIB;dftpkglib=QGPL;languageid=ENU;pkg=QGPL/DEFAULT(IBM),2,0,1,0,512;qrystglmt=-1">
                                              <ui:ExecuteQuery.Parameters>
                                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                              </ui:ExecuteQuery.Parameters>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExecuteQuery>
                                            <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtbDelayWork2]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="307,214" sap2010:WorkflowViewState.IdRef="ForEachRow_24">
                                              <ui:ForEachRow.Body>
                                                <ActivityAction x:TypeArguments="sd:DataRow">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                                  </ActivityAction.Argument>
                                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="242,143" sap2010:WorkflowViewState.IdRef="Sequence_228">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <If Condition="[string.IsNullOrEmpty(row(0).ToString)]" sap:VirtualizedContainerService.HintSize="569,208" sap2010:WorkflowViewState.IdRef="If_21">
                                                      <If.Then>
                                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_80">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:Int32">[In32day2]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_77">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:Int32">[In32day2]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:Int32">[CInt(row(0).ToString)]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </If.Else>
                                                    </If>
                                                  </Sequence>
                                                </ActivityAction>
                                              </ui:ForEachRow.Body>
                                            </ui:ForEachRow>
                                          </Sequence>
                                          <Sequence DisplayName="Delay by Recent day 1" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_230">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtbDelayWork]" DisplayName="Execute query" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExecuteQuery_32" ProviderName="System.Data.Odbc" Sql="[&quot;SELECT  sum(RE_QTY) as sum FROM (SELECT OR,PRO2.PR,LINE1,LINE2,CN1I09 as WASHING,ITEMCODE,ITEM_NAME1,ITEM_NAME2,LEFT(SLDCA0,2) AS SLIDER,LENGTH,UNIT_LEN,COLOR,RE_QTY,START_DATE,START_TIME,EST_DATE,EST_TIME,CUSTOMER,BUYER,PRO_STATUS,REMAKEFLAG ,INSTR(CN1I09,'[') AS Position FROM PUBLICLIB.PRO_ONPRO2 PRO2 INNER JOIN WAVEDLIB.FA000 ON ITEMCODE=ITMCA0 LEFT JOIN WAVEDLIB.C0900 ON LEFT(DDTC09,5)=LINE1||LINE2 AND DGRC09='LN1C') A LEFT JOIN WAVEDLIB.C0900 B ON A.WASHING=B.CN1I09 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN1,PPMCAB||' - '||PPTNAB AS MC1, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP1 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) C ON C.PR1=A.PR AND POP1=1 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN2,PPMCAB||' - '||PPTNAB AS MC2, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP2 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) E ON E.PR1=A.PR AND POP2=2 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN3,PPMCAB||' - '||PPTNAB AS MC3, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP3 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) F ON F.PR1=A.PR AND POP3=3 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN4,PPMCAB||' - '||PPTNAB AS MC4, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP4 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) D ON D.PR1=A.PR AND POP4=4 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN5,PPMCAB||' - '||PPTNAB AS MC5, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP5 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) G ON G.PR1=A.PR AND POP5=5 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN6,PPMCAB||' - '||PPTNAB AS MC6, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP6 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) H ON H.PR1=A.PR AND POP6=6 WHERE  EST_DATE  = &quot; + strDaywork]" ConnectionString="Dsn=WAVEDLIB;system=10.246.194.1;uid=ROBOT;dbq=QGPL WAVEDLIB;dftpkglib=QGPL;languageid=ENU;pkg=QGPL/DEFAULT(IBM),2,0,1,0,512;qrystglmt=-1">
                                              <ui:ExecuteQuery.Parameters>
                                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                              </ui:ExecuteQuery.Parameters>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExecuteQuery>
                                            <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtbDelayWork]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="307,214" sap2010:WorkflowViewState.IdRef="ForEachRow_25">
                                              <ui:ForEachRow.Body>
                                                <ActivityAction x:TypeArguments="sd:DataRow">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                                  </ActivityAction.Argument>
                                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_231">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <If Condition="[string.IsNullOrEmpty(row(0).ToString)]" sap:VirtualizedContainerService.HintSize="569,208" sap2010:WorkflowViewState.IdRef="If_22">
                                                      <If.Then>
                                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_81">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:Int32">[In32day1]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_82">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:Int32">[In32day2]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:Int32">[CInt(row(0).ToString)]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </If.Else>
                                                    </If>
                                                  </Sequence>
                                                </ActivityAction>
                                              </ui:ForEachRow.Body>
                                            </ui:ForEachRow>
                                          </Sequence>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_74">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[in32PS4]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">[In32day1 + In32day2]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_75">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[strPCS4]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[Convert.ToString(in32PS4)]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                        <Sequence DisplayName="Sum All Day" sap:VirtualizedContainerService.HintSize="675,234" sap2010:WorkflowViewState.IdRef="Sequence_170">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtbSumAll]" DisplayName="Execute query" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExecuteQuery_23" ProviderName="System.Data.Odbc" Sql="[&quot;SELECT  sum(RE_QTY) as sum FROM (SELECT OR,PRO2.PR,LINE1,LINE2,CN1I09 as WASHING,ITEMCODE,ITEM_NAME1,ITEM_NAME2,LEFT(SLDCA0,2) AS SLIDER,LENGTH,UNIT_LEN,COLOR,RE_QTY,START_DATE,START_TIME,EST_DATE,EST_TIME,CUSTOMER,BUYER,PRO_STATUS,REMAKEFLAG ,INSTR(CN1I09,'[') AS Position FROM PUBLICLIB.PRO_ONPRO2 PRO2 INNER JOIN WAVEDLIB.FA000 ON ITEMCODE=ITMCA0 LEFT JOIN WAVEDLIB.C0900 ON LEFT(DDTC09,5)=LINE1||LINE2 AND DGRC09='LN1C') A LEFT JOIN WAVEDLIB.C0900 B ON A.WASHING=B.CN1I09 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN1,PPMCAB||' - '||PPTNAB AS MC1, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP1 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) C ON C.PR1=A.PR AND POP1=1 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN2,PPMCAB||' - '||PPTNAB AS MC2, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP2 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) E ON E.PR1=A.PR AND POP2=2 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN3,PPMCAB||' - '||PPTNAB AS MC3, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP3 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) F ON F.PR1=A.PR AND POP3=3 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN4,PPMCAB||' - '||PPTNAB AS MC4, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP4 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) D ON D.PR1=A.PR AND POP4=4 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN5,PPMCAB||' - '||PPTNAB AS MC5, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP5 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) G ON G.PR1=A.PR AND POP5=5 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN6,PPMCAB||' - '||PPTNAB AS MC6, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP6 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) H ON H.PR1=A.PR AND POP6=6 WHERE  EST_DATE  &gt;= &quot; +&quot;'&quot; + strDayStart +&quot;'&quot; +&quot;  AND  EST_DATE &lt;= '&quot; +strDayEnd + &quot;'&quot;]" ConnectionString="Dsn=WAVEDLIB;system=10.246.194.1;uid=ROBOT;dbq=QGPL WAVEDLIB;dftpkglib=QGPL;languageid=ENU;pkg=QGPL/DEFAULT(IBM),2,0,1,0,512;qrystglmt=-1">
                                            <ui:ExecuteQuery.Parameters>
                                              <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                            </ui:ExecuteQuery.Parameters>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:ExecuteQuery>
                                          <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtbSumAll]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ForEachRow_21">
                                            <ui:ForEachRow.Body>
                                              <ActivityAction x:TypeArguments="sd:DataRow">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                                </ActivityAction.Argument>
                                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_169">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_53">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[strSumMonth]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </ActivityAction>
                                            </ui:ForEachRow.Body>
                                          </ui:ForEachRow>
                                        </Sequence>
                                        <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="675,1596" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_26" Workbook="[wbMFDeLay]" WorkbookPath="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Daily Delay Report MF ASS &quot;+strYear+&quot;.xlsx&quot;]">
                                          <ui:ExcelApplicationScope.Body>
                                            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                              </ActivityAction.Argument>
                                              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="478,1487" sap2010:WorkflowViewState.IdRef="Sequence_171">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign sap:VirtualizedContainerService.HintSize="436,60" sap2010:WorkflowViewState.IdRef="Assign_54">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[ConvertDayWork]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[strDaywork]</InArgument>
                                                  </Assign.Value>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </Assign>
                                                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="FindLast2" EntryMethodParameters="[{&quot;Delay by day&quot;,ConvertDayWork,strPROD,strPCS4,In32VmarRow}]" sap:VirtualizedContainerService.HintSize="436,51" sap2010:WorkflowViewState.IdRef="InvokeVBA_86" />
                                                <ui:ExcelWriteCell Cell="B5" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="436,51" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_20" SheetName="PROD RECORD" Text="[strYear]" />
                                                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="SumMonthNoSQL" EntryMethodParameters="[{&quot;Delay by day&quot;,strDaywork}]" sap:VirtualizedContainerService.HintSize="436,51" sap2010:WorkflowViewState.IdRef="InvokeVBA_116" />
                                                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="436,51" sap2010:WorkflowViewState.IdRef="CommentOut_11">
                                                  <ui:CommentOut.Body>
                                                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_213">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="SumMonths" EntryMethodParameters="[{&quot;PROD RECORD&quot;, strSumMonth , strDaywork}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_87" />
                                                    </Sequence>
                                                  </ui:CommentOut.Body>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:CommentOut>
                                                <If Condition="[In32day2 &gt;0]" sap:VirtualizedContainerService.HintSize="436,51" sap2010:WorkflowViewState.IdRef="If_23">
                                                  <If.Then>
                                                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="DelayUnitDay2" EntryMethodParameters="[{&quot;PROD RECORD&quot;,strDaywork,strMFC,strMFO,strMFM}]" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeVBA_119" />
                                                  </If.Then>
                                                  <If.Else>
                                                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="DelayUnit" EntryMethodParameters="[{&quot;PROD RECORD&quot;,strDaywork,strMFC,strMFO,strMFM}]" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeVBA_120" />
                                                  </If.Else>
                                                </If>
                                                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="436,51" sap2010:WorkflowViewState.IdRef="CommentOut_14">
                                                  <ui:CommentOut.Body>
                                                    <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_232">
                                                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="DelayUnit" EntryMethodParameters="[{&quot;PROD RECORD&quot;,strDaywork,strMFC,strMFO,strMFM}]" sap:VirtualizedContainerService.HintSize="436,51" sap2010:WorkflowViewState.IdRef="InvokeVBA_88" />
                                                    </Sequence>
                                                  </ui:CommentOut.Body>
                                                </ui:CommentOut>
                                                <ui:InvokeVBA CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="SumPROD" EntryMethodParameters="[{&quot;Delay by day&quot;,strDaywork}]" sap:VirtualizedContainerService.HintSize="436,51" sap2010:WorkflowViewState.IdRef="InvokeVBA_89" OutputValue="[TotalPROD]" />
                                                <ui:InvokeVBA CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="SumDelaypcs" EntryMethodParameters="[{&quot;Delay by day&quot;,strDaywork}]" sap:VirtualizedContainerService.HintSize="436,51" sap2010:WorkflowViewState.IdRef="InvokeVBA_90" OutputValue="[TotalDelaypcs]" />
                                                <ui:InvokeVBA CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="SumDelayPR" EntryMethodParameters="[{&quot;Delay by day&quot;,strDaywork}]" sap:VirtualizedContainerService.HintSize="436,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_91" OutputValue="[TotalDalayPR]" />
                                                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="GraphPROD" EntryMethodParameters="[{&quot;Graph&quot;,strDaywork,TotalPROD.ToString}]" sap:VirtualizedContainerService.HintSize="436,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_92" />
                                                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="GraphDelaypcs" EntryMethodParameters="[{&quot;Graph&quot;,strDaywork,TotalDelaypcs.ToString}]" sap:VirtualizedContainerService.HintSize="436,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_93" />
                                                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="GraphDelayPR" EntryMethodParameters="[{&quot;Graph&quot;,strDaywork,TotalDalayPR.ToString}]" sap:VirtualizedContainerService.HintSize="436,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_94" />
                                                <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="436,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_27" Workbook="[wbMFDeLay]">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:ExcelCloseWorkbook>
                                              </Sequence>
                                            </ActivityAction>
                                          </ui:ExcelApplicationScope.Body>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:ExcelApplicationScope>
                                        <Sequence DisplayName="Open File data" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_174">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_27" Workbook="[wbLoadProduct]" WorkbookPath="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Load production&quot;+&quot;.xlsx&quot;]">
                                            <ui:ExcelApplicationScope.Body>
                                              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                </ActivityAction.Argument>
                                                <Sequence sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_217">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,278" sap2010:WorkflowViewState.IdRef="Sequence_172">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="CheckData" EntryMethodParameters="[{&quot;Sheet1&quot;,strDaywork}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_95" />
                                                    <ui:ExcelReadRange AddHeaders="False" DataTable="[dtbLoadSheet1]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_15" Range="A2" SheetName="Sheet1" />
                                                  </Sequence>
                                                  <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="376,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_28" Workbook="[wbLoadProduct]">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:ExcelCloseWorkbook>
                                                </Sequence>
                                              </ActivityAction>
                                            </ui:ExcelApplicationScope.Body>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:ExcelApplicationScope>
                                          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_28" Workbook="[wbMFDeLay]" WorkbookPath="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Daily Delay Report MF ASS &quot;+strYear+&quot;.xlsx&quot;]">
                                            <ui:ExcelApplicationScope.Body>
                                              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                </ActivityAction.Argument>
                                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="304,425" sap2010:WorkflowViewState.IdRef="Sequence_173">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:ExcelReadRange AddHeaders="False" DataTable="[dtbData]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="ExcelReadRange_16" SheetName="Data">
                                                    <ui:ExcelReadRange.Range>
                                                      <InArgument x:TypeArguments="x:String">
                                                        <Literal x:TypeArguments="x:String" Value="" />
                                                      </InArgument>
                                                    </ui:ExcelReadRange.Range>
                                                  </ui:ExcelReadRange>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_55">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Int32">[in32VmaxData]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Int32">[dtbData.rows.Count +1]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtbLoadSheet1]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_11" SheetName="Data" StartingCell="[&quot;A&quot;+in32VmaxData.ToString]" />
                                                  <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_29" Workbook="[wbMFDeLay]" />
                                                </Sequence>
                                              </ActivityAction>
                                            </ui:ExcelApplicationScope.Body>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:ExcelApplicationScope>
                                        </Sequence>
                                      </Sequence>
                                      <Sequence DisplayName="Open File Note" sap:VirtualizedContainerService.HintSize="717,341" sap2010:WorkflowViewState.IdRef="Sequence_219">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Sequence DisplayName="F" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_221">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="979,175" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_37" Workbook="[wbMFNote]" WorkbookPath="[&quot;\\ykkvnm.com\vnmfs\YKKDATA\DEPARTMENT\PRODUCTION\MF\HA - MF\2019\18 Delay MF\RPA\MF ASS&quot; +&quot;\&quot;+&quot;Daily Delay Report MF ASS &quot;+strYear+&quot; - TEST&quot; +&quot;.xlsx&quot;]">
                                            <ui:ExcelApplicationScope.Body>
                                              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                </ActivityAction.Argument>
                                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="242,234" sap2010:WorkflowViewState.IdRef="Sequence_220">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:ExcelReadRange AddHeaders="True" DataTable="[dtbMFNote]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelReadRange_21" SheetName="Data">
                                                    <ui:ExcelReadRange.Range>
                                                      <InArgument x:TypeArguments="x:String">
                                                        <Literal x:TypeArguments="x:String" Value="" />
                                                      </InArgument>
                                                    </ui:ExcelReadRange.Range>
                                                  </ui:ExcelReadRange>
                                                  <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_37" Workbook="[wbMFNote]" />
                                                </Sequence>
                                              </ActivityAction>
                                            </ui:ExcelApplicationScope.Body>
                                          </ui:ExcelApplicationScope>
                                        </Sequence>
                                        <Sequence DisplayName="Open Daily" sap:VirtualizedContainerService.HintSize="242,143" sap2010:WorkflowViewState.IdRef="Sequence_223">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_38" Workbook="[wbMFDeLay]" WorkbookPath="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Daily Delay Report MF ASS &quot;+strYear+&quot;.xlsx&quot;]">
                                            <ui:ExcelApplicationScope.Body>
                                              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                </ActivityAction.Argument>
                                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="242,325" sap2010:WorkflowViewState.IdRef="Sequence_222">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:ExcelWriteRange AddHeaders="True" DataTable="[dtbMFNote]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_14" SheetName="Sheet2">
                                                    <ui:ExcelWriteRange.StartingCell>
                                                      <InArgument x:TypeArguments="x:String">
                                                        <Literal x:TypeArguments="x:String" Value="" />
                                                      </InArgument>
                                                    </ui:ExcelWriteRange.StartingCell>
                                                  </ui:ExcelWriteRange>
                                                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="NoteMF" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeVBA_118" />
                                                  <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_38" Workbook="[wbMFDeLay]" />
                                                </Sequence>
                                              </ActivityAction>
                                            </ui:ExcelApplicationScope.Body>
                                          </ui:ExcelApplicationScope>
                                        </Sequence>
                                      </Sequence>
                                      <Sequence DisplayName="\\Send Mail Complete" sap:VirtualizedContainerService.HintSize="717,1231" sap2010:WorkflowViewState.IdRef="Sequence_181">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Sequence DisplayName="Sq\\ Send email Complete" sap:VirtualizedContainerService.HintSize="418,1139" sap2010:WorkflowViewState.IdRef="Sequence_180">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Sequence DisplayName="Sq\\ Creat mail body" sap:VirtualizedContainerService.HintSize="376,542" sap2010:WorkflowViewState.IdRef="Sequence_176">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="262,64" sap2010:WorkflowViewState.IdRef="Assign_56">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[stBodyMail]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String" xml:space="preserve">
&lt;html&gt; 
	
	&lt;head&gt; 
	&lt;meta http-equiv=Content-Type content=““text/html; charset=windows-1252”“&gt; 
	&lt;meta name=Generator content=““Microsoft Word 15 (filtered)”“&gt; 
	&lt;style&gt; 
	&lt;!-- 
	/* Font Definitions */ 
	@font-face 
	{font-family:Helv; 
	panose-1:2 11 6 4 2 2 2 3 2 4;} 
	@font-face 
	{font-family:Wingdings; 
	panose-1:5 0 0 0 0 0 0 0 0 0;} 
	@font-face 
	{font-family:”“MS Mincho”“; 
	panose-1:2 2 6 9 4 2 5 8 3 4;} 
	@font-face 
	{font-family:”“Cambria Math”“; 
	panose-1:2 4 5 3 5 4 6 3 2 4;} 
	@font-face 
	{font-family:Calibri; 
	panose-1:2 15 5 2 2 2 4 3 2 4;} 
	@font-face 
	{font-family:”“Segoe UI”“; 
	panose-1:2 11 5 2 4 2 4 2 2 3;} 
	@font-face 
	{font-family:Tahoma; 
	panose-1:2 11 6 4 3 5 4 4 2 4;} 
	@font-face 
	{font-family:Verdana; 
	panose-1:2 11 6 4 3 5 4 4 2 4;} 
	@font-face 
	{font-family:Webdings; 
	panose-1:5 3 1 2 1 5 9 6 7 3;} 
	@font-face 
	{font-family:”“\@MS Mincho”“; 
	panose-1:0 0 0 0 0 0 0 0 0 0;} 
	/* Style Definitions */ 
	p.MsoNormal, li.MsoNormal, div.MsoNormal 
	{margin-top:0cm; 
	margin-right:0cm; 
	margin-bottom:8.0pt; 
	margin-left:0cm; 
	line-height:106%; 
	font-size:11.0pt; 
	font-family:”“Calibri”“,sans-serif;} 
	.MsoChpDefault 
	{font-size:10.0pt; 
	font-family:”“Calibri”“,sans-serif;} 
	@page WordSection1 
	{size:612.0pt 792.0pt; 
	margin:72.0pt 72.0pt 72.0pt 72.0pt;} 
	div.WordSection1 
	{page:WordSection1;} 
	--&gt; 
	&lt;/style&gt; 
	
	&lt;/head&gt; 
	
	&lt;body lang=EN-US&gt; 
	
	&lt;div Class=WordSection1&gt; 
	
	&lt;p Class=MsoNormal&gt;&lt;span style='font-size:10.0pt;line-height:106%;font-family: 
	““Segoe UI”“,sans-serif;color:black'&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
	
	&lt;p Class=MsoNormal&gt;&lt;b&gt;&lt;span style='font-size:15px;line-height:106%; 
	font-family:”“Segoe UI”“,sans-serif;color:black'&gt;Dear [UserName] &lt;/span&gt;&lt;/b&gt;&lt;/p&gt; 
	
	&lt;p Class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'&gt;&lt;span 
	style='font-size:10.0pt;line-height:106%;font-family:”“Segoe UI”“,sans-serif; 
	color:black'&gt;[BodyMail]&lt;br&gt; 
	&lt;br&gt; 
	&lt;/span&gt;&lt;/p&gt; 
	
	&lt;p Class=MsoNormal&gt;&lt;span style='font-size:10.0pt;line-height:106%;font-family: 
	““Segoe UI”“,sans-serif;color:black'&gt;Best regards,&lt;/span&gt;&lt;/p&gt; 
	
	&lt;p Class=MsoNormal&gt;&lt;b&gt;&lt;span style='font-size:10.0pt;line-height:106%; 
	font-family:”“Segoe UI”“,sans-serif;color:black'&gt;Robotics (Mr.) – [NameMachine]&lt;/span&gt;&lt;/b&gt;&lt;/p&gt; 
	
	&lt;p Class=MsoNormal&gt;&lt;span style='font-size:8.0pt;line-height:106%;font-family: 
	““Verdana”“,sans-serif;color:black'&gt;===============================================&lt;br&gt; 
	&lt;/span&gt;&lt;span style='font-size:8.0pt;line-height:106%;font-family:”“Verdana”“,sans-serif; 
	color:navy'&gt;| &lt;/span&gt;&lt;span style='font-size:10.0pt;line-height:106%;font-family: 
	Wingdings;color:navy'&gt;*&lt;/span&gt;&lt;span style='font-size:10.0pt;line-height:106%; 
	font-family:”“Verdana”“,sans-serif;color:navy'&gt; &lt;/span&gt;&lt;span style='font-size: 
	8.0pt;line-height:106%;font-family:”“Verdana”“,sans-serif;color:navy'&gt;Email: &lt;u&gt;developer@ykk.com.vn&lt;/u&gt; 
	| Website:  &lt;u&gt;www.ykk.com.vn&lt;/u&gt;&lt;/span&gt;&lt;span style='font-size:8.0pt; 
	line-height:106%;font-family:”“Verdana”“,sans-serif;color:black'&gt; &lt;/span&gt;&lt;b&gt;&lt;span 
	style='font-size:8.0pt;line-height:106%;font-family:”“Verdana”“,sans-serif; 
	color:navy'&gt;&lt;br&gt; 
	&lt;br&gt; 
	YKK VietNam Co., LTD - Ho Chi Minh Branch Office&lt;/span&gt;&lt;/b&gt;&lt;span 
	style='font-size:8.0pt;line-height:106%;font-family:”“Verdana”“,sans-serif; 
	color:navy'&gt;&lt;br&gt; 
	4th Floor, AB Tower, 76 Le Lai St., Ben Thanh Ward, Dist. 1, HCMC, Viet Nam&lt;br&gt; 
	&lt;/span&gt;&lt;span style='font-size:8.0pt;line-height:106%;font-family:”“Verdana”“,sans-serif; 
	color:green'&gt;===============================================&lt;br&gt; 
	&lt;/span&gt;&lt;b&gt;&lt;span style='font-size:14.0pt;line-height:106%;font-family:Webdings; 
	color:green'&gt;P&lt;/span&gt;&lt;/b&gt;&lt;span style='font-size:6.0pt;line-height:106%; 
	font-family:”“Helv”“,sans-serif;color:black'&gt; &lt;/span&gt;&lt;b&gt;&lt;span style='font-size: 
	8.0pt;line-height:106%;font-family:”“Arial”“,sans-serif;color:green'&gt;&amp;quot;Please 
	consider the environment before printing this e-mail&amp;quot;&lt;br&gt; 
	&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style='font-size:6.0pt;line-height:106%;font-family:”“Tahoma”“,sans-serif; 
	color:black'&gt;CONFIDENTIAL NOTE:&lt;/span&gt;&lt;/b&gt;&lt;span style='font-size:7.0pt; 
	line-height:106%;font-family:”“Tahoma”“,sans-serif;color:black'&gt; The information 
	contained In this email Is intended only For the use Of the individual Or 
	entity named&lt;br&gt; 
	above And may contain information that Is privileged, confidential And exempt 
	From disclosure under applicable law. If the&lt;br&gt; 
	reader Of this message Is Not the intended recipient, you are hereby notified 
	that any dissemination, distribution Or copying&lt;br&gt; 
	Of this communication Is strictly prohibited. Thank you.&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
	
	&lt;/div&gt; 
	
	&lt;/body&gt; 
	
	&lt;/html&gt;
</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_57">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[stBodyNotificationMail]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String" xml:space="preserve">["Chương trình đã chạy thành công  anh vui lòng check lại file kết quả ở trên ." +" Thanks !"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_58">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[stMachineName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[environment.MachineName]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <p:ReplaceString DisplayName="Replace string\\ Replace UserName mail" ExistingValue="%[UserName]" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="ReplaceString_13" Input="[stBodyMail]" Replacement="A. Quang" Result="[stBodyMail]" />
                                            <p:ReplaceString DisplayName="Replace string\\ Replace body mail" ExistingValue="%[BodyMail]" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="ReplaceString_14" Input="[stBodyMail]" Replacement="[stBodyNotificationMail]" Result="[stBodyMail]" />
                                            <p:ReplaceString DisplayName="Replace string\\ Replace Name Machine Mail" ExistingValue="%[NameMachine]" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="ReplaceString_15" Input="[stBodyMail]" Replacement="[stMachineName]" Result="[stBodyMail]" />
                                          </Sequence>
                                          <ui:SendMail Bcc="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Body="[stBodyMail]" Cc="[&quot;ngoctham@ykk.com.vn&quot; +&quot;,&quot; +&quot;vansang@ykk.com.vn&quot;]" DisplayName="Send SMTP Mail Message" Email="[dicDIC(&quot;EmailAddressDeveloper&quot;).ToString]" EnableSSL="True" sap:VirtualizedContainerService.HintSize="376,145" sap2010:WorkflowViewState.IdRef="SendMail_5" IsBodyHtml="True" Name="[dicDIC(&quot;NameSenderMail&quot;).ToString]" Password="[dicDIC(&quot;EmailPassword&quot;).ToString]" Port="25" SecureConnection="Auto" Server="[dicDIC(&quot;IPSendMailServer&quot;).ToString]" Subject="DAILY DELAY REPORT MF ASS" To="vanquang@ykk.com.vn">
                                            <ui:SendMail.Files>
                                              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                                <InArgument x:TypeArguments="x:String">[dicDIC("FolderLocalDaiLyDelayReportMF").ToString+"\"+"Input"+"\"+"Daily Delay Report MF ASS "+strYear+".xlsx"]</InArgument>
                                              </scg:List>
                                            </ui:SendMail.Files>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:SendMail>
                                          <Sequence DisplayName="History  database" sap:VirtualizedContainerService.HintSize="376,280" sap2010:WorkflowViewState.IdRef="Sequence_226">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="x:String" Name="strEndTime" />
                                            </Sequence.Variables>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_70">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[strEndTime]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[Date.Now.ToString("MM/dd/yy hh:mm:ss")]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExecuteQuery ContinueOnError="{x:Null}" DataTable="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute query" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_29" ProviderName="System.Data.Odbc" Sql="[&quot;UPDATE RPALIB.ROBOT_LOG_HCM_SCH SET RESULT = 'COMPLETE' , END_TIME = '&quot; +strEndTime + &quot; ' WHERE  START_TIME = ' &quot; + StartTime +&quot;'  &quot;]" ConnectionString="Dsn=RPALIB;uid=robot;pwd=robotics">
                                              <ui:ExecuteQuery.Parameters>
                                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                              </ui:ExecuteQuery.Parameters>
                                            </ui:ExecuteQuery>
                                          </Sequence>
                                        </Sequence>
                                      </Sequence>
                                      <Sequence DisplayName="Copy File H" sap:VirtualizedContainerService.HintSize="717,446" sap2010:WorkflowViewState.IdRef="Sequence_182">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:CopyFile ContinueOnError="{x:Null}" Destination="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Daily Delay Report MF ASS &quot;+strYear+&quot;.xlsx&quot;]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="384,157" sap2010:WorkflowViewState.IdRef="CopyFile_22" Overwrite="True" Path="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Daily Delay Report MF ASS &quot;+strYear+&quot;.xlsx&quot;]" />
                                        <ui:CopyFile ContinueOnError="{x:Null}" Destination="[&quot;\\ykkvnm.com\vnmfs\YKKDATA\DEPARTMENT\PRODUCTION\MF\HA - MF\2019\18 Delay MF\RPA\MF ASS&quot; +&quot;\&quot;+&quot;Daily Delay Report MF ASS &quot;+strYear+&quot; - TEST&quot; +&quot;.xlsx&quot;]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="384,157" sap2010:WorkflowViewState.IdRef="CopyFile_24" Overwrite="True" Path="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Daily Delay Report MF ASS &quot;+strYear+&quot;.xlsx&quot;]" />
                                      </Sequence>
                                    </Sequence>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </Sequence>
                        </If.Then>
                      </If>
                    </Sequence>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEachRow>
          </Sequence>
        </Sequence>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">300,483</av:Point>
              <av:Size x:Key="ShapeSize">200,66</av:Size>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Sequence\\Write History" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_265">
            <Sequence.Variables>
              <Variable x:TypeArguments="ui:GenericValue" Name="SQLEndTime" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_97">
              <Assign.To>
                <OutArgument x:TypeArguments="ui:GenericValue">[SQLEndTime]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="ui:GenericValue">[System.DateTime.Now.ToString(“MM/dd/yy HH:mm:ss”)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ExecuteQuery ContinueOnError="{x:Null}" DataTable="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Query" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_38" ProviderName="System.Data.Odbc" Sql="[&quot;UPDATE RPALIB.ROBOT_LOG_HCM_SCH SET END_TIME = '&quot;+SQLEndTime+&quot;', RESULT = 'Complete'  WHERE START_TIME = '&quot;+StartTime+&quot;' &quot;]" ConnectionString="Dsn=RPALIB;uid=robot;pwd=robotics">
              <ui:ExecuteQuery.Parameters>
                <scg:Dictionary x:TypeArguments="x:String, Argument" />
              </ui:ExecuteQuery.Parameters>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExecuteQuery>
          </Sequence>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <FlowStep>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">70,627</av:Point>
          <av:Size x:Key="ShapeSize">200,66</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Day 2 Month 4" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_47">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence DisplayName="Copy Template New" sap:VirtualizedContainerService.HintSize="426,249" sap2010:WorkflowViewState.IdRef="Sequence_49">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:CopyFile ContinueOnError="{x:Null}" Destination="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Daily Delay Report MF ASS &quot;+strYear+&quot;.xlsx&quot;]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="384,157" sap2010:WorkflowViewState.IdRef="CopyFile_5" Overwrite="True" Path="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Daily Delay Report MF ASS Template.xlsx&quot;]" />
        </Sequence>
        <Sequence DisplayName=" Day 2 Month 4" sap:VirtualizedContainerService.HintSize="426,264" sap2010:WorkflowViewState.IdRef="Sequence_156">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="DownLoad File Load Production" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_131">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:CopyFile ContinueOnError="{x:Null}" Destination="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Load production&quot;+&quot;.xlsx&quot;]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="384,157" sap2010:WorkflowViewState.IdRef="CopyFile_12" Overwrite="True" Path="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Load production.xlsx&quot;]" />
          </Sequence>
          <Sequence DisplayName="Take database " sap:VirtualizedContainerService.HintSize="242,690" sap2010:WorkflowViewState.IdRef="Sequence_155">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtbLoadProduct]" DisplayName="Execute query" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExecuteQuery_18" ProviderName="System.Data.Odbc" Sql="[&quot;SELECT OR,A.PR,LINE1,LINE2,WASHING,SUBSTRING(B.CN1I09,Position,10) AS WASHING1,ITEMCODE,ITEM_NAME1,ITEM_NAME2,SLIDER,LENGTH,UNIT_LEN,COLOR,RE_QTY,START_DATE,START_TIME,EST_DATE,EST_TIME,CUSTOMER, BUYER,PRO_STATUS,REMAKEFLAG, LN1,MC1,LN2,MC2,LN3,MC3,LN4,MC4,LN5,MC5,LN6,MC6 FROM (SELECT OR,PRO2.PR,LINE1,LINE2,CN1I09 as WASHING,ITEMCODE,ITEM_NAME1,ITEM_NAME2,LEFT(SLDCA0,2) AS SLIDER,LENGTH,UNIT_LEN,COLOR,RE_QTY,START_DATE,START_TIME,EST_DATE,EST_TIME,CUSTOMER,BUYER,PRO_STATUS,REMAKEFLAG ,INSTR(CN1I09,'[') AS Position FROM PUBLICLIB.PRO_ONPRO2 PRO2 INNER JOIN WAVEDLIB.FA000 ON ITEMCODE=ITMCA0 LEFT JOIN WAVEDLIB.C0900 ON LEFT(DDTC09,5)=LINE1||LINE2 AND DGRC09='LN1C') A LEFT JOIN WAVEDLIB.C0900 B ON A.WASHING=B.CN1I09 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN1,PPMCAB||' - '||PPTNAB AS MC1, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP1 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) C ON C.PR1=A.PR AND POP1=1 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN2,PPMCAB||' - '||PPTNAB AS MC2, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP2 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) E ON E.PR1=A.PR AND POP2=2 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN3,PPMCAB||' - '||PPTNAB AS MC3, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP3 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) F ON F.PR1=A.PR AND POP3=3 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN4,PPMCAB||' - '||PPTNAB AS MC4, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP4 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) D ON D.PR1=A.PR AND POP4=4 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN5,PPMCAB||' - '||PPTNAB AS MC5, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP5 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) G ON G.PR1=A.PR AND POP5=5 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN6,PPMCAB||' - '||PPTNAB AS MC6, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP6 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) H ON H.PR1=A.PR AND POP6=6 where EST_DATE =&quot; + strDaywork]" ConnectionString="Dsn=WAVEDLIB;system=10.246.194.1;uid=ROBOT;dbq=QGPL WAVEDLIB;dftpkglib=QGPL;languageid=ENU;pkg=QGPL/DEFAULT(IBM),2,0,1,0,512;qrystglmt=-1">
              <ui:ExecuteQuery.Parameters>
                <scg:Dictionary x:TypeArguments="x:String, Argument" />
              </ui:ExecuteQuery.Parameters>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExecuteQuery>
            <Sequence DisplayName="write database" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_134">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="573,2125" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_18" Workbook="[wbLoadProduct]" WorkbookPath="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Load production&quot;+&quot;.xlsx&quot;]">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="418,2016" sap2010:WorkflowViewState.IdRef="Sequence_133">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="OffAlter" sap:VirtualizedContainerService.HintSize="376,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_56" />
                      <ui:ExcelWriteRange AddHeaders="True" DataTable="[dtbLoadProduct]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="376,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_8" SheetName="Sheet1">
                        <ui:ExcelWriteRange.StartingCell>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ui:ExcelWriteRange.StartingCell>
                      </ui:ExcelWriteRange>
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="VBAColumn2" sap:VirtualizedContainerService.HintSize="376,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_57" />
                      <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="376,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_15" SheetName="Sheet1" Text="OCM" />
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="VlookupTest" sap:VirtualizedContainerService.HintSize="376,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_58" />
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="VlookupTest" sap:VirtualizedContainerService.HintSize="376,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_59" />
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="CheckOR" sap:VirtualizedContainerService.HintSize="376,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_60" />
                      <ui:ExcelReadRange AddHeaders="False" DataTable="[dtbLoadProduct2]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="376,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_11" Range="A2" SheetName="Sheet1" />
                      <Assign sap:VirtualizedContainerService.HintSize="376,60" sap2010:WorkflowViewState.IdRef="Assign_42">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[In32VmarRow]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[dtbLoadProduct2.Rows.Count]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Sequence DisplayName="MCF" sap:VirtualizedContainerService.HintSize="376,836" sap2010:WorkflowViewState.IdRef="Sequence_132">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="MFC" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_61" />
                        <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="FMFC" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_62" />
                        <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="FMFO" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_63" />
                        <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="FMFM" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_64" />
                        <If Condition="[wbLoadProduct.GetSheets.Contains(&quot;MFC1&quot;)]" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="If_11">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <ui:ExcelReadCell Cell="A1" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_10" SheetName="MFC1">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="ui:GenericValue">[strMFC]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                          </If.Then>
                        </If>
                        <If Condition="[wbLoadProduct.GetSheets.Contains(&quot;MFO1&quot;)]" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="If_12">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <ui:ExcelReadCell Cell="A1" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_11" SheetName="MFO1">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="ui:GenericValue">[strMFO]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                          </If.Then>
                        </If>
                        <If Condition="[wbLoadProduct.GetSheets.Contains(&quot;MFM1&quot;)]" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="If_13">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <ui:ExcelReadCell Cell="A1" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_12" SheetName="MFM1">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="ui:GenericValue">[strMFM]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                          </If.Then>
                        </If>
                      </Sequence>
                    </Sequence>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelApplicationScope>
              <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="573,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_19" Workbook="[wbLoadProduct]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelCloseWorkbook>
            </Sequence>
            <Sequence DisplayName="Copy File Template MF" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_135">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:CopyFile ContinueOnError="{x:Null}" Destination="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Daily Delay Report MF ASS &quot;+strYear+&quot;.xlsx&quot;]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="384,157" sap2010:WorkflowViewState.IdRef="CopyFile_13" Overwrite="True" Path="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Daily Delay Report MF ASS.xlsx&quot;]" />
            </Sequence>
            <Sequence DisplayName="Open File Template MF" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_147">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Take PROD" sap:VirtualizedContainerService.HintSize="418,334" sap2010:WorkflowViewState.IdRef="Sequence_138">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="Open File  DailyD" sap:VirtualizedContainerService.HintSize="376,242" sap2010:WorkflowViewState.IdRef="Sequence_137">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_19" WorkbookPath="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;DailyD&quot;+DayCurrent+&quot;.xlsx&quot;]">
                    <ui:ExcelApplicationScope.Body>
                      <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,278" sap2010:WorkflowViewState.IdRef="Sequence_136">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="Qty" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_65" />
                          <ui:ExcelReadCell Cell="A1" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_13" SheetName="Sheet2">
                            <ui:ExcelReadCell.Result>
                              <OutArgument x:TypeArguments="ui:GenericValue">[strPROD]</OutArgument>
                            </ui:ExcelReadCell.Result>
                          </ui:ExcelReadCell>
                        </Sequence>
                      </ActivityAction>
                    </ui:ExcelApplicationScope.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ExcelApplicationScope>
                  <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_20" Workbook="[wbInputWing]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ExcelCloseWorkbook>
                </Sequence>
              </Sequence>
              <Sequence DisplayName="Sum Day Recent 2" sap:VirtualizedContainerService.HintSize="418,66" sap2010:WorkflowViewState.IdRef="Sequence_140">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtbPCS4]" DisplayName="Execute query" sap:VirtualizedContainerService.HintSize="354,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_19" ProviderName="System.Data.Odbc" Sql="[&quot;SELECT  sum(RE_QTY) as sum FROM (SELECT OR,PRO2.PR,LINE1,LINE2,CN1I09 as WASHING,ITEMCODE,ITEM_NAME1,ITEM_NAME2,LEFT(SLDCA0,2) AS SLIDER,LENGTH,UNIT_LEN,COLOR,RE_QTY,START_DATE,START_TIME,EST_DATE,EST_TIME,CUSTOMER,BUYER,PRO_STATUS,REMAKEFLAG ,INSTR(CN1I09,'[') AS Position FROM PUBLICLIB.PRO_ONPRO2 PRO2 INNER JOIN WAVEDLIB.FA000 ON ITEMCODE=ITMCA0 LEFT JOIN WAVEDLIB.C0900 ON LEFT(DDTC09,5)=LINE1||LINE2 AND DGRC09='LN1C') A LEFT JOIN WAVEDLIB.C0900 B ON A.WASHING=B.CN1I09 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN1,PPMCAB||' - '||PPTNAB AS MC1, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP1 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) C ON C.PR1=A.PR AND POP1=1 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN2,PPMCAB||' - '||PPTNAB AS MC2, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP2 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) E ON E.PR1=A.PR AND POP2=2 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN3,PPMCAB||' - '||PPTNAB AS MC3, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP3 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) F ON F.PR1=A.PR AND POP3=3 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN4,PPMCAB||' - '||PPTNAB AS MC4, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP4 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) D ON D.PR1=A.PR AND POP4=4 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN5,PPMCAB||' - '||PPTNAB AS MC5, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP5 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) G ON G.PR1=A.PR AND POP5=5 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN6,PPMCAB||' - '||PPTNAB AS MC6, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP6 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) H ON H.PR1=A.PR AND POP6=6 WHERE  EST_DATE   IN ( &quot;  +&quot; ' &quot;+ strDaywork +&quot; ' &quot; +&quot;, &quot; + &quot; ' &quot;+ strDaywork2 + &quot;'&quot; +&quot; )&quot;]" ConnectionString="Dsn=WAVEDLIB;system=10.246.194.1;uid=ROBOT;dbq=QGPL WAVEDLIB;dftpkglib=QGPL;languageid=ENU;pkg=QGPL/DEFAULT(IBM),2,0,1,0,512;qrystglmt=-1">
                  <ui:ExecuteQuery.Parameters>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:ExecuteQuery.Parameters>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExecuteQuery>
                <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtbPCS4]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="354,300" sap2010:WorkflowViewState.IdRef="ForEachRow_18">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_139">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_43">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strPCS4]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEachRow>
              </Sequence>
              <Sequence DisplayName="Sum All Day" sap:VirtualizedContainerService.HintSize="418,66" sap2010:WorkflowViewState.IdRef="Sequence_142">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtbSumAll]" DisplayName="Execute query" sap:VirtualizedContainerService.HintSize="354,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_20" ProviderName="System.Data.Odbc" Sql="[&quot;SELECT  sum(RE_QTY) as sum FROM (SELECT OR,PRO2.PR,LINE1,LINE2,CN1I09 as WASHING,ITEMCODE,ITEM_NAME1,ITEM_NAME2,LEFT(SLDCA0,2) AS SLIDER,LENGTH,UNIT_LEN,COLOR,RE_QTY,START_DATE,START_TIME,EST_DATE,EST_TIME,CUSTOMER,BUYER,PRO_STATUS,REMAKEFLAG ,INSTR(CN1I09,'[') AS Position FROM PUBLICLIB.PRO_ONPRO2 PRO2 INNER JOIN WAVEDLIB.FA000 ON ITEMCODE=ITMCA0 LEFT JOIN WAVEDLIB.C0900 ON LEFT(DDTC09,5)=LINE1||LINE2 AND DGRC09='LN1C') A LEFT JOIN WAVEDLIB.C0900 B ON A.WASHING=B.CN1I09 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN1,PPMCAB||' - '||PPTNAB AS MC1, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP1 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) C ON C.PR1=A.PR AND POP1=1 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN2,PPMCAB||' - '||PPTNAB AS MC2, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP2 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) E ON E.PR1=A.PR AND POP2=2 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN3,PPMCAB||' - '||PPTNAB AS MC3, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP3 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) F ON F.PR1=A.PR AND POP3=3 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN4,PPMCAB||' - '||PPTNAB AS MC4, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP4 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) D ON D.PR1=A.PR AND POP4=4 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN5,PPMCAB||' - '||PPTNAB AS MC5, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP5 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) G ON G.PR1=A.PR AND POP5=5 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN6,PPMCAB||' - '||PPTNAB AS MC6, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP6 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) H ON H.PR1=A.PR AND POP6=6 WHERE  EST_DATE  &gt;= &quot; +&quot;'&quot; + strDayStart +&quot;'&quot; +&quot;  AND  EST_DATE &lt;= '&quot; +strDayEnd + &quot;'&quot;]" ConnectionString="Dsn=WAVEDLIB;system=10.246.194.1;uid=ROBOT;dbq=QGPL WAVEDLIB;dftpkglib=QGPL;languageid=ENU;pkg=QGPL/DEFAULT(IBM),2,0,1,0,512;qrystglmt=-1">
                  <ui:ExecuteQuery.Parameters>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:ExecuteQuery.Parameters>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExecuteQuery>
                <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtbSumAll]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="354,300" sap2010:WorkflowViewState.IdRef="ForEachRow_19">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_141">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_44">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strSumMonth]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                </ui:ForEachRow>
              </Sequence>
              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="418,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_20" Workbook="[wbMFDeLay]" WorkbookPath="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Daily Delay Report MF ASS &quot;+strYear+&quot;.xlsx&quot;]">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,1422" sap2010:WorkflowViewState.IdRef="Sequence_143">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_45">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[ConvertDayWork]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDaywork]</InArgument>
                        </Assign.Value>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Assign>
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="FindLast2" EntryMethodParameters="[{&quot;Delay by day&quot;,ConvertDayWork,strPROD,strPCS4,In32VmarRow}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_66" />
                      <ui:ExcelWriteCell Cell="B5" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_16" SheetName="PROD RECORD" Text="[strYear]" />
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="SumMonths" EntryMethodParameters="[{&quot;PROD RECORD&quot;, strSumMonth , strDaywork}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_67" />
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="DelayUnit" EntryMethodParameters="[{&quot;PROD RECORD&quot;,strDaywork,strMFC,strMFO,strMFM}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_68" />
                      <ui:InvokeVBA CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="SumPROD" EntryMethodParameters="[{&quot;Delay by day&quot;,strDaywork}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_69" OutputValue="[TotalPROD]" />
                      <ui:InvokeVBA CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="SumDelaypcs" EntryMethodParameters="[{&quot;Delay by day&quot;,strDaywork}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_70" OutputValue="[TotalDelaypcs]" />
                      <ui:InvokeVBA CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="SumDelayPR" EntryMethodParameters="[{&quot;Delay by day&quot;,strDaywork}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_71" OutputValue="[TotalDalayPR]" />
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="GraphPROD" EntryMethodParameters="[{&quot;Graph&quot;,strDaywork,TotalPROD.ToString}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_72" />
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="GraphDelaypcs" EntryMethodParameters="[{&quot;Graph&quot;,strDaywork,TotalDelaypcs.ToString}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_73" />
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="GraphDelayPR" EntryMethodParameters="[{&quot;Graph&quot;,strDaywork,TotalDalayPR.ToString}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_74" />
                    </Sequence>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelApplicationScope>
              <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="418,51" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_21" Workbook="[wbMFDeLay]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelCloseWorkbook>
              <Sequence DisplayName="Open File data" sap:VirtualizedContainerService.HintSize="376,424" sap2010:WorkflowViewState.IdRef="Sequence_146">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_21" Workbook="[wbLoadProduct]" WorkbookPath="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Load production&quot;+&quot;.xlsx&quot;]">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,278" sap2010:WorkflowViewState.IdRef="Sequence_144">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="CheckData" EntryMethodParameters="[{&quot;Sheet1&quot;,strDaywork}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_75" />
                        <ui:ExcelReadRange AddHeaders="False" DataTable="[dtbLoadSheet1]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_12" Range="A2" SheetName="Sheet1" />
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelApplicationScope>
                <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_22" Workbook="[wbLoadProduct]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelCloseWorkbook>
                <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="675,487" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_22" Workbook="[wbMFDeLay]" WorkbookPath="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Daily Delay Report MF ASS &quot;+strYear+&quot;.xlsx&quot;]">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,378" sap2010:WorkflowViewState.IdRef="Sequence_145">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelReadRange AddHeaders="False" DataTable="[dtbData]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_13" SheetName="Data">
                          <ui:ExcelReadRange.Range>
                            <InArgument x:TypeArguments="x:String">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                          </ui:ExcelReadRange.Range>
                        </ui:ExcelReadRange>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_46">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[in32VmaxData]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[dtbData.rows.Count +2]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtbLoadSheet1]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_9" SheetName="Data" StartingCell="[&quot;A&quot;+in32VmaxData.ToString]" />
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelApplicationScope>
                <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_23" Workbook="[wbMFDeLay]" />
              </Sequence>
            </Sequence>
            <Sequence DisplayName="\\Send Mail Complete" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_153">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Sq\\ Send email Complete" sap:VirtualizedContainerService.HintSize="376,925" sap2010:WorkflowViewState.IdRef="Sequence_152">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="Sq\\ Creat mail body" sap:VirtualizedContainerService.HintSize="334,542" sap2010:WorkflowViewState.IdRef="Sequence_148">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="262,64" sap2010:WorkflowViewState.IdRef="Assign_47">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[stBodyMail]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">
&lt;html&gt; 
	
	&lt;head&gt; 
	&lt;meta http-equiv=Content-Type content=““text/html; charset=windows-1252”“&gt; 
	&lt;meta name=Generator content=““Microsoft Word 15 (filtered)”“&gt; 
	&lt;style&gt; 
	&lt;!-- 
	/* Font Definitions */ 
	@font-face 
	{font-family:Helv; 
	panose-1:2 11 6 4 2 2 2 3 2 4;} 
	@font-face 
	{font-family:Wingdings; 
	panose-1:5 0 0 0 0 0 0 0 0 0;} 
	@font-face 
	{font-family:”“MS Mincho”“; 
	panose-1:2 2 6 9 4 2 5 8 3 4;} 
	@font-face 
	{font-family:”“Cambria Math”“; 
	panose-1:2 4 5 3 5 4 6 3 2 4;} 
	@font-face 
	{font-family:Calibri; 
	panose-1:2 15 5 2 2 2 4 3 2 4;} 
	@font-face 
	{font-family:”“Segoe UI”“; 
	panose-1:2 11 5 2 4 2 4 2 2 3;} 
	@font-face 
	{font-family:Tahoma; 
	panose-1:2 11 6 4 3 5 4 4 2 4;} 
	@font-face 
	{font-family:Verdana; 
	panose-1:2 11 6 4 3 5 4 4 2 4;} 
	@font-face 
	{font-family:Webdings; 
	panose-1:5 3 1 2 1 5 9 6 7 3;} 
	@font-face 
	{font-family:”“\@MS Mincho”“; 
	panose-1:0 0 0 0 0 0 0 0 0 0;} 
	/* Style Definitions */ 
	p.MsoNormal, li.MsoNormal, div.MsoNormal 
	{margin-top:0cm; 
	margin-right:0cm; 
	margin-bottom:8.0pt; 
	margin-left:0cm; 
	line-height:106%; 
	font-size:11.0pt; 
	font-family:”“Calibri”“,sans-serif;} 
	.MsoChpDefault 
	{font-size:10.0pt; 
	font-family:”“Calibri”“,sans-serif;} 
	@page WordSection1 
	{size:612.0pt 792.0pt; 
	margin:72.0pt 72.0pt 72.0pt 72.0pt;} 
	div.WordSection1 
	{page:WordSection1;} 
	--&gt; 
	&lt;/style&gt; 
	
	&lt;/head&gt; 
	
	&lt;body lang=EN-US&gt; 
	
	&lt;div Class=WordSection1&gt; 
	
	&lt;p Class=MsoNormal&gt;&lt;span style='font-size:10.0pt;line-height:106%;font-family: 
	““Segoe UI”“,sans-serif;color:black'&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
	
	&lt;p Class=MsoNormal&gt;&lt;b&gt;&lt;span style='font-size:15px;line-height:106%; 
	font-family:”“Segoe UI”“,sans-serif;color:black'&gt;Dear [UserName] &lt;/span&gt;&lt;/b&gt;&lt;/p&gt; 
	
	&lt;p Class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'&gt;&lt;span 
	style='font-size:10.0pt;line-height:106%;font-family:”“Segoe UI”“,sans-serif; 
	color:black'&gt;[BodyMail]&lt;br&gt; 
	&lt;br&gt; 
	&lt;/span&gt;&lt;/p&gt; 
	
	&lt;p Class=MsoNormal&gt;&lt;span style='font-size:10.0pt;line-height:106%;font-family: 
	““Segoe UI”“,sans-serif;color:black'&gt;Best regards,&lt;/span&gt;&lt;/p&gt; 
	
	&lt;p Class=MsoNormal&gt;&lt;b&gt;&lt;span style='font-size:10.0pt;line-height:106%; 
	font-family:”“Segoe UI”“,sans-serif;color:black'&gt;Robotics (Mr.) – [NameMachine]&lt;/span&gt;&lt;/b&gt;&lt;/p&gt; 
	
	&lt;p Class=MsoNormal&gt;&lt;span style='font-size:8.0pt;line-height:106%;font-family: 
	““Verdana”“,sans-serif;color:black'&gt;===============================================&lt;br&gt; 
	&lt;/span&gt;&lt;span style='font-size:8.0pt;line-height:106%;font-family:”“Verdana”“,sans-serif; 
	color:navy'&gt;| &lt;/span&gt;&lt;span style='font-size:10.0pt;line-height:106%;font-family: 
	Wingdings;color:navy'&gt;*&lt;/span&gt;&lt;span style='font-size:10.0pt;line-height:106%; 
	font-family:”“Verdana”“,sans-serif;color:navy'&gt; &lt;/span&gt;&lt;span style='font-size: 
	8.0pt;line-height:106%;font-family:”“Verdana”“,sans-serif;color:navy'&gt;Email: &lt;u&gt;developer@ykk.com.vn&lt;/u&gt; 
	| Website:  &lt;u&gt;www.ykk.com.vn&lt;/u&gt;&lt;/span&gt;&lt;span style='font-size:8.0pt; 
	line-height:106%;font-family:”“Verdana”“,sans-serif;color:black'&gt; &lt;/span&gt;&lt;b&gt;&lt;span 
	style='font-size:8.0pt;line-height:106%;font-family:”“Verdana”“,sans-serif; 
	color:navy'&gt;&lt;br&gt; 
	&lt;br&gt; 
	YKK VietNam Co., LTD - Ho Chi Minh Branch Office&lt;/span&gt;&lt;/b&gt;&lt;span 
	style='font-size:8.0pt;line-height:106%;font-family:”“Verdana”“,sans-serif; 
	color:navy'&gt;&lt;br&gt; 
	4th Floor, AB Tower, 76 Le Lai St., Ben Thanh Ward, Dist. 1, HCMC, Viet Nam&lt;br&gt; 
	&lt;/span&gt;&lt;span style='font-size:8.0pt;line-height:106%;font-family:”“Verdana”“,sans-serif; 
	color:green'&gt;===============================================&lt;br&gt; 
	&lt;/span&gt;&lt;b&gt;&lt;span style='font-size:14.0pt;line-height:106%;font-family:Webdings; 
	color:green'&gt;P&lt;/span&gt;&lt;/b&gt;&lt;span style='font-size:6.0pt;line-height:106%; 
	font-family:”“Helv”“,sans-serif;color:black'&gt; &lt;/span&gt;&lt;b&gt;&lt;span style='font-size: 
	8.0pt;line-height:106%;font-family:”“Arial”“,sans-serif;color:green'&gt;&amp;quot;Please 
	consider the environment before printing this e-mail&amp;quot;&lt;br&gt; 
	&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style='font-size:6.0pt;line-height:106%;font-family:”“Tahoma”“,sans-serif; 
	color:black'&gt;CONFIDENTIAL NOTE:&lt;/span&gt;&lt;/b&gt;&lt;span style='font-size:7.0pt; 
	line-height:106%;font-family:”“Tahoma”“,sans-serif;color:black'&gt; The information 
	contained In this email Is intended only For the use Of the individual Or 
	entity named&lt;br&gt; 
	above And may contain information that Is privileged, confidential And exempt 
	From disclosure under applicable law. If the&lt;br&gt; 
	reader Of this message Is Not the intended recipient, you are hereby notified 
	that any dissemination, distribution Or copying&lt;br&gt; 
	Of this communication Is strictly prohibited. Thank you.&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
	
	&lt;/div&gt; 
	
	&lt;/body&gt; 
	
	&lt;/html&gt;
</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_48">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[stBodyNotificationMail]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">["Chương trình đã chạy thành công  anh vui lòng check lại file kết quả ở trên ." +" Thanks !"]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_49">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[stMachineName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[environment.MachineName]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <p:ReplaceString DisplayName="Replace string\\ Replace UserName mail" ExistingValue="%[UserName]" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="ReplaceString_10" Input="[stBodyMail]" Replacement="A. Quang" Result="[stBodyMail]" />
                  <p:ReplaceString DisplayName="Replace string\\ Replace body mail" ExistingValue="%[BodyMail]" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="ReplaceString_11" Input="[stBodyMail]" Replacement="[stBodyNotificationMail]" Result="[stBodyMail]" />
                  <p:ReplaceString DisplayName="Replace string\\ Replace Name Machine Mail" ExistingValue="%[NameMachine]" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="ReplaceString_12" Input="[stBodyMail]" Replacement="[stMachineName]" Result="[stBodyMail]" />
                </Sequence>
                <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Body="[stBodyMail]" DisplayName="Send SMTP Mail Message" Email="[dicDIC(&quot;EmailAddressDeveloper&quot;).ToString]" EnableSSL="True" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendMail_4" IsBodyHtml="True" Name="[dicDIC(&quot;NameSenderMail&quot;).ToString]" Password="[dicDIC(&quot;EmailPassword&quot;).ToString]" Port="[convert.ToInt32(dicDIC(&quot;PortSendPOP3MailServer&quot;).ToString)]" SecureConnection="Auto" Server="10.246.194.61" Subject="DAILY DELAY REPORT MF ASS" To="vansang@ykk.com.vn">
                  <ui:SendMail.Files>
                    <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                      <InArgument x:TypeArguments="x:String">[dicDIC("FolderLocalDaiLyDelayReportMF").ToString+"\"+"Input"+"\"+"Daily Delay Report MF ASS "+strYear+".xlsx"]</InArgument>
                    </scg:List>
                  </ui:SendMail.Files>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:SendMail>
                <Sequence DisplayName="Sequence\\Write History" sap:VirtualizedContainerService.HintSize="476,697" sap2010:WorkflowViewState.IdRef="Sequence_151">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Excel application scope" sap:VirtualizedContainerService.HintSize="434,415" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_23" WorkbookPath="[dicDIC(&quot;LocalFolderHistorySchedule&quot;).ToString]">
                    <ui:ExcelApplicationScope.Body>
                      <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                        </ActivityAction.Argument>
                        <Sequence sap:VirtualizedContainerService.HintSize="376,306" sap2010:WorkflowViewState.IdRef="Sequence_149">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ExcelWriteCell Cell="[&quot;C&quot;+int32TotalRows.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_17" SheetName="Log" Text="[System.DateTime.Now.ToString(“MM/dd/yy HH:mm:ss”)]" />
                          <ui:ExcelWriteCell Cell="[&quot;G&quot;+int32TotalRows.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_18" SheetName="Log" Text="Complete" />
                        </Sequence>
                      </ActivityAction>
                    </ui:ExcelApplicationScope.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ExcelApplicationScope>
                  <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="434,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_24" Workbook="[wbHistory]" />
                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="434,51" sap2010:WorkflowViewState.IdRef="CommentOut_8">
                    <ui:CommentOut.Body>
                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="426,249" sap2010:WorkflowViewState.IdRef="Sequence_150">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:CopyFile ContinueOnError="{x:Null}" Destination="[dicDIC(&quot;ServerFolderHistorySchedule&quot;).ToString]" DisplayName="Copy file History (To folder sever)" sap:VirtualizedContainerService.HintSize="384,157" sap2010:WorkflowViewState.IdRef="CopyFile_14" Overwrite="True" Path="[dicDIC(&quot;LocalFolderHistorySchedule&quot;).ToString]" />
                      </Sequence>
                    </ui:CommentOut.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:CommentOut>
                </Sequence>
              </Sequence>
            </Sequence>
            <Sequence DisplayName="Copy File H" sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_154">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Sequence>
          </Sequence>
        </Sequence>
      </Sequence>
    </FlowStep>
    <FlowStep>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">480,636</av:Point>
          <av:Size x:Key="ShapeSize">200,66</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Not Day 2 Month 4" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_48">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence DisplayName="DownLoad File Load Production" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_51">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:CopyFile ContinueOnError="{x:Null}" Destination="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Load production&quot;+&quot;.xlsx&quot;]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="384,157" sap2010:WorkflowViewState.IdRef="CopyFile_6" Overwrite="True" Path="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Load production.xlsx&quot;]" />
        </Sequence>
        <Sequence DisplayName="Take database " sap:VirtualizedContainerService.HintSize="242,690" sap2010:WorkflowViewState.IdRef="Sequence_50">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtbLoadProduct]" DisplayName="Execute query" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExecuteQuery_9" ProviderName="System.Data.Odbc" Sql="[&quot;SELECT OR,A.PR,LINE1,LINE2,WASHING,SUBSTRING(B.CN1I09,Position,10) AS WASHING1,ITEMCODE,ITEM_NAME1,ITEM_NAME2,SLIDER,LENGTH,UNIT_LEN,COLOR,RE_QTY,START_DATE,START_TIME,EST_DATE,EST_TIME,CUSTOMER, BUYER,PRO_STATUS,REMAKEFLAG, LN1,MC1,LN2,MC2,LN3,MC3,LN4,MC4,LN5,MC5,LN6,MC6 FROM (SELECT OR,PRO2.PR,LINE1,LINE2,CN1I09 as WASHING,ITEMCODE,ITEM_NAME1,ITEM_NAME2,LEFT(SLDCA0,2) AS SLIDER,LENGTH,UNIT_LEN,COLOR,RE_QTY,START_DATE,START_TIME,EST_DATE,EST_TIME,CUSTOMER,BUYER,PRO_STATUS,REMAKEFLAG ,INSTR(CN1I09,'[') AS Position FROM PUBLICLIB.PRO_ONPRO2 PRO2 INNER JOIN WAVEDLIB.FA000 ON ITEMCODE=ITMCA0 LEFT JOIN WAVEDLIB.C0900 ON LEFT(DDTC09,5)=LINE1||LINE2 AND DGRC09='LN1C') A LEFT JOIN WAVEDLIB.C0900 B ON A.WASHING=B.CN1I09 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN1,PPMCAB||' - '||PPTNAB AS MC1, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP1 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) C ON C.PR1=A.PR AND POP1=1 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN2,PPMCAB||' - '||PPTNAB AS MC2, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP2 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) E ON E.PR1=A.PR AND POP2=2 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN3,PPMCAB||' - '||PPTNAB AS MC3, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP3 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) F ON F.PR1=A.PR AND POP3=3 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN4,PPMCAB||' - '||PPTNAB AS MC4, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP4 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) D ON D.PR1=A.PR AND POP4=4 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN5,PPMCAB||' - '||PPTNAB AS MC5, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP5 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) G ON G.PR1=A.PR AND POP5=5 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN6,PPMCAB||' - '||PPTNAB AS MC6, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP6 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) H ON H.PR1=A.PR AND POP6=6 where EST_DATE =&quot; + strDaywork]" ConnectionString="Dsn=WAVEDLIB;system=10.246.194.1;uid=ROBOT;dbq=QGPL WAVEDLIB;dftpkglib=QGPL;languageid=ENU;pkg=QGPL/DEFAULT(IBM),2,0,1,0,512;qrystglmt=-1">
            <ui:ExecuteQuery.Parameters>
              <scg:Dictionary x:TypeArguments="x:String, Argument" />
            </ui:ExecuteQuery.Parameters>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ExecuteQuery>
          <Sequence DisplayName="write database" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_52">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="573,2125" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_5" Workbook="[wbLoadProduct]" WorkbookPath="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Load production&quot;+&quot;.xlsx&quot;]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="418,2016" sap2010:WorkflowViewState.IdRef="Sequence_54">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="OffAlter" sap:VirtualizedContainerService.HintSize="376,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_4" />
                    <ui:ExcelWriteRange AddHeaders="True" DataTable="[dtbLoadProduct]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="376,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_4" SheetName="Sheet1">
                      <ui:ExcelWriteRange.StartingCell>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </ui:ExcelWriteRange.StartingCell>
                    </ui:ExcelWriteRange>
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="VBAColumn2" sap:VirtualizedContainerService.HintSize="376,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_5" />
                    <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="376,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="Sheet1" Text="OCM" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="VlookupTest" sap:VirtualizedContainerService.HintSize="376,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_7" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="VlookupTest" sap:VirtualizedContainerService.HintSize="376,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_33" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="CheckOR" sap:VirtualizedContainerService.HintSize="376,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_34" />
                    <ui:ExcelReadRange AddHeaders="False" DataTable="[dtbLoadProduct2]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="376,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_3" Range="A2" SheetName="Sheet1" />
                    <Assign sap:VirtualizedContainerService.HintSize="376,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[In32VmarRow]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[dtbLoadProduct2.Rows.Count]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Sequence DisplayName="MCF" sap:VirtualizedContainerService.HintSize="376,836" sap2010:WorkflowViewState.IdRef="Sequence_81">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="MFC" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_15" />
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="FMFC" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_20" />
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="FMFO" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_21" />
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="FMFM" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_22" />
                      <If Condition="[wbLoadProduct.GetSheets.Contains(&quot;MFC1&quot;)]" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="If_4">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <ui:ExcelReadCell Cell="A1" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_3" SheetName="MFC1">
                            <ui:ExcelReadCell.Result>
                              <OutArgument x:TypeArguments="ui:GenericValue">[strMFC]</OutArgument>
                            </ui:ExcelReadCell.Result>
                          </ui:ExcelReadCell>
                        </If.Then>
                      </If>
                      <If Condition="[wbLoadProduct.GetSheets.Contains(&quot;MFO1&quot;)]" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="If_5">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <ui:ExcelReadCell Cell="A1" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_4" SheetName="MFO1">
                            <ui:ExcelReadCell.Result>
                              <OutArgument x:TypeArguments="ui:GenericValue">[strMFO]</OutArgument>
                            </ui:ExcelReadCell.Result>
                          </ui:ExcelReadCell>
                        </If.Then>
                      </If>
                      <If Condition="[wbLoadProduct.GetSheets.Contains(&quot;MFM1&quot;)]" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="If_6">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <ui:ExcelReadCell Cell="A1" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_5" SheetName="MFM1">
                            <ui:ExcelReadCell.Result>
                              <OutArgument x:TypeArguments="ui:GenericValue">[strMFM]</OutArgument>
                            </ui:ExcelReadCell.Result>
                          </ui:ExcelReadCell>
                        </If.Then>
                      </If>
                    </Sequence>
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelApplicationScope>
            <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="573,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_5" Workbook="[wbLoadProduct]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelCloseWorkbook>
          </Sequence>
          <Sequence DisplayName="Copy File Template MF" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_56">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:CopyFile ContinueOnError="{x:Null}" Destination="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Daily Delay Report MF ASS &quot;+strYear+&quot;.xlsx&quot;]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="384,157" sap2010:WorkflowViewState.IdRef="CopyFile_7" Overwrite="True" Path="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Daily Delay Report MF ASS.xlsx&quot;]" />
          </Sequence>
          <Sequence DisplayName="Open File Template MF" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_58">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Take PROD" sap:VirtualizedContainerService.HintSize="418,334" sap2010:WorkflowViewState.IdRef="Sequence_65">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Open File  DailyD" sap:VirtualizedContainerService.HintSize="376,242" sap2010:WorkflowViewState.IdRef="Sequence_66">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_7" WorkbookPath="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;DailyD&quot;+DayCurrent+&quot;.xlsx&quot;]">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,278" sap2010:WorkflowViewState.IdRef="Sequence_67">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="Qty" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_9" />
                        <ui:ExcelReadCell Cell="A1" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_2" SheetName="Sheet2">
                          <ui:ExcelReadCell.Result>
                            <OutArgument x:TypeArguments="ui:GenericValue">[strPROD]</OutArgument>
                          </ui:ExcelReadCell.Result>
                        </ui:ExcelReadCell>
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelApplicationScope>
                <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_8" Workbook="[wbInputWing]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelCloseWorkbook>
              </Sequence>
            </Sequence>
            <Sequence DisplayName="Sum Day Recent 2" sap:VirtualizedContainerService.HintSize="418,66" sap2010:WorkflowViewState.IdRef="Sequence_70">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtbPCS4]" DisplayName="Execute query" sap:VirtualizedContainerService.HintSize="354,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_11" ProviderName="System.Data.Odbc" Sql="[&quot;SELECT  sum(RE_QTY) as sum FROM (SELECT OR,PRO2.PR,LINE1,LINE2,CN1I09 as WASHING,ITEMCODE,ITEM_NAME1,ITEM_NAME2,LEFT(SLDCA0,2) AS SLIDER,LENGTH,UNIT_LEN,COLOR,RE_QTY,START_DATE,START_TIME,EST_DATE,EST_TIME,CUSTOMER,BUYER,PRO_STATUS,REMAKEFLAG ,INSTR(CN1I09,'[') AS Position FROM PUBLICLIB.PRO_ONPRO2 PRO2 INNER JOIN WAVEDLIB.FA000 ON ITEMCODE=ITMCA0 LEFT JOIN WAVEDLIB.C0900 ON LEFT(DDTC09,5)=LINE1||LINE2 AND DGRC09='LN1C') A LEFT JOIN WAVEDLIB.C0900 B ON A.WASHING=B.CN1I09 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN1,PPMCAB||' - '||PPTNAB AS MC1, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP1 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) C ON C.PR1=A.PR AND POP1=1 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN2,PPMCAB||' - '||PPTNAB AS MC2, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP2 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) E ON E.PR1=A.PR AND POP2=2 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN3,PPMCAB||' - '||PPTNAB AS MC3, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP3 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) F ON F.PR1=A.PR AND POP3=3 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN4,PPMCAB||' - '||PPTNAB AS MC4, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP4 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) D ON D.PR1=A.PR AND POP4=4 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN5,PPMCAB||' - '||PPTNAB AS MC5, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP5 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) G ON G.PR1=A.PR AND POP5=5 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN6,PPMCAB||' - '||PPTNAB AS MC6, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP6 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) H ON H.PR1=A.PR AND POP6=6 WHERE  EST_DATE   IN ( &quot;  +&quot; ' &quot;+ strDaywork +&quot; ' &quot; +&quot;, &quot; + &quot; ' &quot;+ strDaywork2 + &quot;'&quot; +&quot; )&quot;]" ConnectionString="Dsn=WAVEDLIB;system=10.246.194.1;uid=ROBOT;dbq=QGPL WAVEDLIB;dftpkglib=QGPL;languageid=ENU;pkg=QGPL/DEFAULT(IBM),2,0,1,0,512;qrystglmt=-1">
                <ui:ExecuteQuery.Parameters>
                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                </ui:ExecuteQuery.Parameters>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExecuteQuery>
              <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtbPCS4]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="354,300" sap2010:WorkflowViewState.IdRef="ForEachRow_10">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_71">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strPCS4]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEachRow.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEachRow>
            </Sequence>
            <Sequence DisplayName="Sum All Day" sap:VirtualizedContainerService.HintSize="418,66" sap2010:WorkflowViewState.IdRef="Sequence_77">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtbSumAll]" DisplayName="Execute query" sap:VirtualizedContainerService.HintSize="354,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_13" ProviderName="System.Data.Odbc" Sql="[&quot;SELECT  sum(RE_QTY) as sum FROM (SELECT OR,PRO2.PR,LINE1,LINE2,CN1I09 as WASHING,ITEMCODE,ITEM_NAME1,ITEM_NAME2,LEFT(SLDCA0,2) AS SLIDER,LENGTH,UNIT_LEN,COLOR,RE_QTY,START_DATE,START_TIME,EST_DATE,EST_TIME,CUSTOMER,BUYER,PRO_STATUS,REMAKEFLAG ,INSTR(CN1I09,'[') AS Position FROM PUBLICLIB.PRO_ONPRO2 PRO2 INNER JOIN WAVEDLIB.FA000 ON ITEMCODE=ITMCA0 LEFT JOIN WAVEDLIB.C0900 ON LEFT(DDTC09,5)=LINE1||LINE2 AND DGRC09='LN1C') A LEFT JOIN WAVEDLIB.C0900 B ON A.WASHING=B.CN1I09 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN1,PPMCAB||' - '||PPTNAB AS MC1, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP1 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) C ON C.PR1=A.PR AND POP1=1 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN2,PPMCAB||' - '||PPTNAB AS MC2, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP2 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) E ON E.PR1=A.PR AND POP2=2 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN3,PPMCAB||' - '||PPTNAB AS MC3, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP3 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) F ON F.PR1=A.PR AND POP3=3 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN4,PPMCAB||' - '||PPTNAB AS MC4, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP4 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) D ON D.PR1=A.PR AND POP4=4 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN5,PPMCAB||' - '||PPTNAB AS MC5, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP5 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) G ON G.PR1=A.PR AND POP5=5 LEFT JOIN (SELECT PRO.PR AS PR1,PPLCAB AS LN6,PPMCAB||' - '||PPTNAB AS MC6, ROW_NUMBER() OVER(PARTITION BY PRO.PR ORDER BY RADUAB ASC,RADTAB ASC) AS POP6 FROM PUBLICLIB.PRO_ONPRO2 PRO INNER JOIN WAVEDLIB.FAB00 ON PRO.PR=PSHNAB ) H ON H.PR1=A.PR AND POP6=6 WHERE  EST_DATE  &gt;= &quot; +&quot;'&quot; + strDayStart +&quot;'&quot; +&quot;  AND  EST_DATE &lt;= '&quot; +strDayEnd + &quot;'&quot;]" ConnectionString="Dsn=WAVEDLIB;system=10.246.194.1;uid=ROBOT;dbq=QGPL WAVEDLIB;dftpkglib=QGPL;languageid=ENU;pkg=QGPL/DEFAULT(IBM),2,0,1,0,512;qrystglmt=-1">
                <ui:ExecuteQuery.Parameters>
                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                </ui:ExecuteQuery.Parameters>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExecuteQuery>
              <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtbSumAll]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="354,300" sap2010:WorkflowViewState.IdRef="ForEachRow_12">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_78">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strSumMonth]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEachRow.Body>
              </ui:ForEachRow>
            </Sequence>
            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="418,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_6" Workbook="[wbMFDeLay]" WorkbookPath="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Daily Delay Report MF ASS &quot;+strYear+&quot;.xlsx&quot;]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,1422" sap2010:WorkflowViewState.IdRef="Sequence_57">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[ConvertDayWork]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[strDaywork]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="FindLast2" EntryMethodParameters="[{&quot;Delay by day&quot;,ConvertDayWork,strPROD,strPCS4,In32VmarRow}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_8" />
                    <ui:ExcelWriteCell Cell="B5" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="PROD RECORD" Text="[strYear]" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="SumMonths" EntryMethodParameters="[{&quot;PROD RECORD&quot;, strSumMonth , strDaywork}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_14" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="DelayUnit" EntryMethodParameters="[{&quot;PROD RECORD&quot;,strDaywork,strMFC,strMFO,strMFM}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_23" />
                    <ui:InvokeVBA CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="SumPROD" EntryMethodParameters="[{&quot;Delay by day&quot;,strDaywork}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_27" OutputValue="[TotalPROD]" />
                    <ui:InvokeVBA CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="SumDelaypcs" EntryMethodParameters="[{&quot;Delay by day&quot;,strDaywork}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_28" OutputValue="[TotalDelaypcs]" />
                    <ui:InvokeVBA CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="SumDelayPR" EntryMethodParameters="[{&quot;Delay by day&quot;,strDaywork}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_29" OutputValue="[TotalDalayPR]" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="GraphPROD" EntryMethodParameters="[{&quot;Graph&quot;,strDaywork,TotalPROD.ToString}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_30" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="GraphDelaypcs" EntryMethodParameters="[{&quot;Graph&quot;,strDaywork,TotalDelaypcs.ToString}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_31" />
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="GraphDelayPR" EntryMethodParameters="[{&quot;Graph&quot;,strDaywork,TotalDalayPR.ToString}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_32" />
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelApplicationScope>
            <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="418,51" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_6" Workbook="[wbMFDeLay]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelCloseWorkbook>
            <Sequence DisplayName="Open File data" sap:VirtualizedContainerService.HintSize="376,424" sap2010:WorkflowViewState.IdRef="Sequence_86">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_8" Workbook="[wbLoadProduct]" WorkbookPath="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Load production&quot;+&quot;.xlsx&quot;]">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,278" sap2010:WorkflowViewState.IdRef="Sequence_87">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[dicDIC(&quot;FolderServerDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;mf.bas&quot;]" DisplayName="Invoke VBA" EntryMethodName="CheckData" EntryMethodParameters="[{&quot;Sheet1&quot;,strDaywork}]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeVBA_35" />
                      <ui:ExcelReadRange AddHeaders="False" DataTable="[dtbLoadSheet1]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_6" Range="A2" SheetName="Sheet1" />
                    </Sequence>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelApplicationScope>
              <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_9" Workbook="[wbLoadProduct]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelCloseWorkbook>
              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="675,487" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_9" Workbook="[wbMFDeLay]" WorkbookPath="[dicDIC(&quot;FolderLocalDaiLyDelayReportMF&quot;).ToString+&quot;\&quot;+&quot;Input&quot;+&quot;\&quot;+&quot;Daily Delay Report MF ASS &quot;+strYear+&quot;.xlsx&quot;]">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,378" sap2010:WorkflowViewState.IdRef="Sequence_88">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExcelReadRange AddHeaders="False" DataTable="[dtbData]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_7" SheetName="Data">
                        <ui:ExcelReadRange.Range>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ui:ExcelReadRange.Range>
                      </ui:ExcelReadRange>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[in32VmaxData]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[dtbData.rows.Count +2]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtbLoadSheet1]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_5" SheetName="Data" StartingCell="[&quot;A&quot;+in32VmaxData.ToString]" />
                    </Sequence>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelApplicationScope>
              <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_10" Workbook="[wbMFDeLay]" />
            </Sequence>
          </Sequence>
          <Sequence DisplayName="\\Send Mail Complete" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_123">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Sq\\ Send email Complete" sap:VirtualizedContainerService.HintSize="376,925" sap2010:WorkflowViewState.IdRef="Sequence_122">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Sq\\ Creat mail body" sap:VirtualizedContainerService.HintSize="334,542" sap2010:WorkflowViewState.IdRef="Sequence_118">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="262,64" sap2010:WorkflowViewState.IdRef="Assign_36">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[stBodyMail]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String" xml:space="preserve">
&lt;html&gt; 
	
	&lt;head&gt; 
	&lt;meta http-equiv=Content-Type content=““text/html; charset=windows-1252”“&gt; 
	&lt;meta name=Generator content=““Microsoft Word 15 (filtered)”“&gt; 
	&lt;style&gt; 
	&lt;!-- 
	/* Font Definitions */ 
	@font-face 
	{font-family:Helv; 
	panose-1:2 11 6 4 2 2 2 3 2 4;} 
	@font-face 
	{font-family:Wingdings; 
	panose-1:5 0 0 0 0 0 0 0 0 0;} 
	@font-face 
	{font-family:”“MS Mincho”“; 
	panose-1:2 2 6 9 4 2 5 8 3 4;} 
	@font-face 
	{font-family:”“Cambria Math”“; 
	panose-1:2 4 5 3 5 4 6 3 2 4;} 
	@font-face 
	{font-family:Calibri; 
	panose-1:2 15 5 2 2 2 4 3 2 4;} 
	@font-face 
	{font-family:”“Segoe UI”“; 
	panose-1:2 11 5 2 4 2 4 2 2 3;} 
	@font-face 
	{font-family:Tahoma; 
	panose-1:2 11 6 4 3 5 4 4 2 4;} 
	@font-face 
	{font-family:Verdana; 
	panose-1:2 11 6 4 3 5 4 4 2 4;} 
	@font-face 
	{font-family:Webdings; 
	panose-1:5 3 1 2 1 5 9 6 7 3;} 
	@font-face 
	{font-family:”“\@MS Mincho”“; 
	panose-1:0 0 0 0 0 0 0 0 0 0;} 
	/* Style Definitions */ 
	p.MsoNormal, li.MsoNormal, div.MsoNormal 
	{margin-top:0cm; 
	margin-right:0cm; 
	margin-bottom:8.0pt; 
	margin-left:0cm; 
	line-height:106%; 
	font-size:11.0pt; 
	font-family:”“Calibri”“,sans-serif;} 
	.MsoChpDefault 
	{font-size:10.0pt; 
	font-family:”“Calibri”“,sans-serif;} 
	@page WordSection1 
	{size:612.0pt 792.0pt; 
	margin:72.0pt 72.0pt 72.0pt 72.0pt;} 
	div.WordSection1 
	{page:WordSection1;} 
	--&gt; 
	&lt;/style&gt; 
	
	&lt;/head&gt; 
	
	&lt;body lang=EN-US&gt; 
	
	&lt;div Class=WordSection1&gt; 
	
	&lt;p Class=MsoNormal&gt;&lt;span style='font-size:10.0pt;line-height:106%;font-family: 
	““Segoe UI”“,sans-serif;color:black'&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
	
	&lt;p Class=MsoNormal&gt;&lt;b&gt;&lt;span style='font-size:15px;line-height:106%; 
	font-family:”“Segoe UI”“,sans-serif;color:black'&gt;Dear [UserName] &lt;/span&gt;&lt;/b&gt;&lt;/p&gt; 
	
	&lt;p Class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'&gt;&lt;span 
	style='font-size:10.0pt;line-height:106%;font-family:”“Segoe UI”“,sans-serif; 
	color:black'&gt;[BodyMail]&lt;br&gt; 
	&lt;br&gt; 
	&lt;/span&gt;&lt;/p&gt; 
	
	&lt;p Class=MsoNormal&gt;&lt;span style='font-size:10.0pt;line-height:106%;font-family: 
	““Segoe UI”“,sans-serif;color:black'&gt;Best regards,&lt;/span&gt;&lt;/p&gt; 
	
	&lt;p Class=MsoNormal&gt;&lt;b&gt;&lt;span style='font-size:10.0pt;line-height:106%; 
	font-family:”“Segoe UI”“,sans-serif;color:black'&gt;Robotics (Mr.) – [NameMachine]&lt;/span&gt;&lt;/b&gt;&lt;/p&gt; 
	
	&lt;p Class=MsoNormal&gt;&lt;span style='font-size:8.0pt;line-height:106%;font-family: 
	““Verdana”“,sans-serif;color:black'&gt;===============================================&lt;br&gt; 
	&lt;/span&gt;&lt;span style='font-size:8.0pt;line-height:106%;font-family:”“Verdana”“,sans-serif; 
	color:navy'&gt;| &lt;/span&gt;&lt;span style='font-size:10.0pt;line-height:106%;font-family: 
	Wingdings;color:navy'&gt;*&lt;/span&gt;&lt;span style='font-size:10.0pt;line-height:106%; 
	font-family:”“Verdana”“,sans-serif;color:navy'&gt; &lt;/span&gt;&lt;span style='font-size: 
	8.0pt;line-height:106%;font-family:”“Verdana”“,sans-serif;color:navy'&gt;Email: &lt;u&gt;developer@ykk.com.vn&lt;/u&gt; 
	| Website:  &lt;u&gt;www.ykk.com.vn&lt;/u&gt;&lt;/span&gt;&lt;span style='font-size:8.0pt; 
	line-height:106%;font-family:”“Verdana”“,sans-serif;color:black'&gt; &lt;/span&gt;&lt;b&gt;&lt;span 
	style='font-size:8.0pt;line-height:106%;font-family:”“Verdana”“,sans-serif; 
	color:navy'&gt;&lt;br&gt; 
	&lt;br&gt; 
	YKK VietNam Co., LTD - Ho Chi Minh Branch Office&lt;/span&gt;&lt;/b&gt;&lt;span 
	style='font-size:8.0pt;line-height:106%;font-family:”“Verdana”“,sans-serif; 
	color:navy'&gt;&lt;br&gt; 
	4th Floor, AB Tower, 76 Le Lai St., Ben Thanh Ward, Dist. 1, HCMC, Viet Nam&lt;br&gt; 
	&lt;/span&gt;&lt;span style='font-size:8.0pt;line-height:106%;font-family:”“Verdana”“,sans-serif; 
	color:green'&gt;===============================================&lt;br&gt; 
	&lt;/span&gt;&lt;b&gt;&lt;span style='font-size:14.0pt;line-height:106%;font-family:Webdings; 
	color:green'&gt;P&lt;/span&gt;&lt;/b&gt;&lt;span style='font-size:6.0pt;line-height:106%; 
	font-family:”“Helv”“,sans-serif;color:black'&gt; &lt;/span&gt;&lt;b&gt;&lt;span style='font-size: 
	8.0pt;line-height:106%;font-family:”“Arial”“,sans-serif;color:green'&gt;&amp;quot;Please 
	consider the environment before printing this e-mail&amp;quot;&lt;br&gt; 
	&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style='font-size:6.0pt;line-height:106%;font-family:”“Tahoma”“,sans-serif; 
	color:black'&gt;CONFIDENTIAL NOTE:&lt;/span&gt;&lt;/b&gt;&lt;span style='font-size:7.0pt; 
	line-height:106%;font-family:”“Tahoma”“,sans-serif;color:black'&gt; The information 
	contained In this email Is intended only For the use Of the individual Or 
	entity named&lt;br&gt; 
	above And may contain information that Is privileged, confidential And exempt 
	From disclosure under applicable law. If the&lt;br&gt; 
	reader Of this message Is Not the intended recipient, you are hereby notified 
	that any dissemination, distribution Or copying&lt;br&gt; 
	Of this communication Is strictly prohibited. Thank you.&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
	
	&lt;/div&gt; 
	
	&lt;/body&gt; 
	
	&lt;/html&gt;
</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_37">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[stBodyNotificationMail]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String" xml:space="preserve">["Chương trình đã chạy thành công  anh vui lòng check lại file kết quả ở trên ." +" Thanks !"]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_38">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[stMachineName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[environment.MachineName]</InArgument>
                  </Assign.Value>
                </Assign>
                <p:ReplaceString DisplayName="Replace string\\ Replace UserName mail" ExistingValue="%[UserName]" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="ReplaceString_4" Input="[stBodyMail]" Replacement="A. Quang" Result="[stBodyMail]" />
                <p:ReplaceString DisplayName="Replace string\\ Replace body mail" ExistingValue="%[BodyMail]" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="ReplaceString_5" Input="[stBodyMail]" Replacement="[stBodyNotificationMail]" Result="[stBodyMail]" />
                <p:ReplaceString DisplayName="Replace string\\ Replace Name Machine Mail" ExistingValue="%[NameMachine]" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="ReplaceString_6" Input="[stBodyMail]" Replacement="[stMachineName]" Result="[stBodyMail]" />
              </Sequence>
              <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Body="[stBodyMail]" DisplayName="Send SMTP Mail Message" Email="[dicDIC(&quot;EmailAddressDeveloper&quot;).ToString]" EnableSSL="True" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendMail_2" IsBodyHtml="True" Name="[dicDIC(&quot;NameSenderMail&quot;).ToString]" Password="[dicDIC(&quot;EmailPassword&quot;).ToString]" Port="[convert.ToInt32(dicDIC(&quot;PortSendPOP3MailServer&quot;).ToString)]" SecureConnection="Auto" Server="10.246.194.61" Subject="DAILY DELAY REPORT MF ASS" To="vansang@ykk.com.vn">
                <ui:SendMail.Files>
                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                    <InArgument x:TypeArguments="x:String">[dicDIC("FolderLocalDaiLyDelayReportMF").ToString+"\"+"Input"+"\"+"Daily Delay Report MF ASS "+strYear+".xlsx"]</InArgument>
                  </scg:List>
                </ui:SendMail.Files>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:SendMail>
              <Sequence DisplayName="Sequence\\Write History" sap:VirtualizedContainerService.HintSize="476,697" sap2010:WorkflowViewState.IdRef="Sequence_121">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Excel application scope" sap:VirtualizedContainerService.HintSize="434,415" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_16" WorkbookPath="[dicDIC(&quot;LocalFolderHistorySchedule&quot;).ToString]">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence sap:VirtualizedContainerService.HintSize="376,306" sap2010:WorkflowViewState.IdRef="Sequence_119">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelWriteCell Cell="[&quot;C&quot;+int32TotalRows.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_11" SheetName="Log" Text="[System.DateTime.Now.ToString(“MM/dd/yy HH:mm:ss”)]" />
                        <ui:ExcelWriteCell Cell="[&quot;G&quot;+int32TotalRows.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_12" SheetName="Log" Text="Complete" />
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelApplicationScope>
                <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="434,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_17" Workbook="[wbHistory]" />
                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="434,51" sap2010:WorkflowViewState.IdRef="CommentOut_6">
                  <ui:CommentOut.Body>
                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="426,249" sap2010:WorkflowViewState.IdRef="Sequence_120">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:CopyFile ContinueOnError="{x:Null}" Destination="[dicDIC(&quot;ServerFolderHistorySchedule&quot;).ToString]" DisplayName="Copy file History (To folder sever)" sap:VirtualizedContainerService.HintSize="384,157" sap2010:WorkflowViewState.IdRef="CopyFile_10" Overwrite="True" Path="[dicDIC(&quot;LocalFolderHistorySchedule&quot;).ToString]" />
                    </Sequence>
                  </ui:CommentOut.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:CommentOut>
              </Sequence>
            </Sequence>
          </Sequence>
          <Sequence DisplayName="Copy File H" sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_130">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </Sequence>
      </Sequence>
    </FlowStep>
    <FlowStep x:Name="__ReferenceID4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">370,114.5</av:Point>
          <av:Size x:Key="ShapeSize">200,51</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">570,140 750,140 750,194.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:BuildDataTable DataTable="[test]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Key&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Value&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Key&gt;FolderServerDaiLyDelayReportMF&lt;/Key&gt;&#xA;    &lt;Value&gt;H:\Robotics\Reference\DaiLyDelayReportMF&lt;/Value&gt;&#xA;  &lt;/TableName&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Key&gt;FolderLocalDaiLyDelayReportMF&lt;/Key&gt;&#xA;    &lt;Value&gt;D:\Robotics\DaiLyDelayReportMF&lt;/Value&gt;&#xA;  &lt;/TableName&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Key&gt;LocalFolderHistorySchedule&lt;/Key&gt;&#xA;    &lt;Value&gt;D:\Robotics\Reference\History\History_Schedule.xlsx&lt;/Value&gt;&#xA;  &lt;/TableName&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Key&gt;PortSendPOP3MailServer&lt;/Key&gt;&#xA;    &lt;Value&gt;25&lt;/Value&gt;&#xA;  &lt;/TableName&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Key&gt;EmailAddressDeveloper&lt;/Key&gt;&#xA;    &lt;Value&gt;developer@ykk.com.vn&lt;/Value&gt;&#xA;  &lt;/TableName&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Key&gt;EmailPassword&lt;/Key&gt;&#xA;    &lt;Value&gt;Password#123&lt;/Value&gt;&#xA;  &lt;/TableName&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Key&gt;NameSenderMail&lt;/Key&gt;&#xA;    &lt;Value&gt;ROBOTICS&lt;/Value&gt;&#xA;  &lt;/TableName&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Key&gt;IPSendMailServer&lt;/Key&gt;&#xA;    &lt;Value&gt;10.246.192.215&lt;/Value&gt;&#xA;  &lt;/TableName&gt;&#xA;&lt;/NewDataSet&gt;">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:BuildDataTable>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">650,194.5</av:Point>
              <av:Size x:Key="ShapeSize">200,51</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">750,245.5 750,275.5 620,275.5 620,217 410,217 410,247</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[test]" DisplayName="For each row in dtDIC" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ForEachRow_17">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Sq/Add all contents into Dictionary" sap:VirtualizedContainerService.HintSize="627,470" sap2010:WorkflowViewState.IdRef="Sequence_109">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[NOT String.IsNullOrEmpty(row(&quot;Key&quot;).ToString.Trim)]" sap:VirtualizedContainerService.HintSize="585,378" sap2010:WorkflowViewState.IdRef="If_10">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Sq/Add to dictionary" sap:VirtualizedContainerService.HintSize="440,230" sap2010:WorkflowViewState.IdRef="Sequence_108">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <maes:AddToDictionary x:TypeArguments="x:String, x:Object" Dictionary="[dicDIC]" DisplayName="Add to dictionary" sap:VirtualizedContainerService.HintSize="398,138" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_1" Key="[row(&quot;Key&quot;).ToString]" Value="[row(&quot;Value&quot;).ToString]" />
                      </Sequence>
                    </If.Then>
                  </If>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">310,247</av:Point>
                  <av:Size x:Key="ShapeSize">200,66</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">410,313 410,343 400,343 400,367</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="History  database" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_224">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_67">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[StartTime]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[Date.Now.ToString("MM/dd/yy hh:mm:ss")]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_68">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[stMachineName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[Environment.MachineName]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ExecuteQuery ContinueOnError="{x:Null}" DataTable="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute query" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_27" ProviderName="System.Data.Odbc" Sql="[&quot;INSERT INTO RPALIB.ROBOT_LOG_HCM_SCH VALUES('Daily Delay Report MF ASS','&quot;+Trim(StartTime )+&quot; ' &quot; +&quot;  ,   '','','','','','','', '&quot; + stMachineName + &quot;  ') &quot;]" ConnectionString="Dsn=RPALIB;uid=robot;pwd=robotics">
                  <ui:ExecuteQuery.Parameters>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:ExecuteQuery.Parameters>
                </ui:ExecuteQuery>
              </Sequence>
              <FlowStep.Next>
                <x:Reference>__ReferenceID0</x:Reference>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
  </Flowchart>
</Activity>